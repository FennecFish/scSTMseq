sims_1712873833_L9.rds 
Found 10 batches
Using null model in ComBat-seq.
Adjusting for 0 covariate(s) or covariate level(s)
Estimating dispersions
Fitting the GLM model
Shrinkage off - using GLM estimates for parameters
Adjusting the data
Batch Effect Removed 
        R/alignCorpus.R R/asSTMCorpus.R R/checkBeta.R R/cloud.R
value   ?               ?               ?             ?        
visible FALSE           FALSE           FALSE         FALSE    
        R/convertCorpus.R R/estimateEffect.R R/estimateMixedEffect.R
value   ?                 ?                  ?                      
visible FALSE             FALSE              FALSE                  
        R/exclusivity.R R/findThoughts.R R/findTopic.R R/fitNewDocuments.R
value   ?               ?                ?             ?                  
visible FALSE           FALSE            FALSE         FALSE              
        R/heldout.R R/jeffreyskappa.R R/labelTopics.R R/makeDesignMatrix.R
value   ?           ?                 ?               ?                   
visible FALSE       FALSE             FALSE           FALSE               
        R/manyTopics.R R/multiSTM.R R/permute.R R/plot.estimateEffect.R
value   ?              ?            ?           ?                      
visible FALSE          FALSE        FALSE       FALSE                  
        R/plot.fixedEffect.R R/plot.searchK.R R/plot.STM.R R/plotModels.R
value   ?                    ?                ?            ?             
visible FALSE                FALSE            FALSE        FALSE         
        R/plotQuote.R R/plotRemoved.R R/plottingutilfns.R R/plotTopicLoess.R
value   ?             ?               ?                   ?                 
visible FALSE         FALSE           FALSE               FALSE             
        R/prepDocuments.R R/prepsce.R R/produce_cmatrix.R R/RcppExports.R
value   ?                 ?           ?                   ?              
visible FALSE             FALSE       FALSE               FALSE          
        R/readCorpus.R R/residuals.R R/s.R R/sageLabels.R R/scSTM.R R/searchK.R
value   ?              ?             ?     ?              ?         ?          
visible FALSE          FALSE         FALSE FALSE          FALSE     FALSE      
        R/selectModel.R R/semanticCoherence.R R/simBetas.R R/spectral.R
value   ?               ?                     ?            ?           
visible FALSE           FALSE                 FALSE        FALSE       
        R/stm-package.R R/stm.control.R R/STMbound.R R/STMconvergence.R
value   NULL            ?               ?            ?                 
visible TRUE            FALSE           FALSE        FALSE             
        R/STMestep.R R/STMfunctions.R R/STMinit.R R/STMinitLikelihood.R
value   ?            ?                ?           ?                    
visible FALSE        FALSE            FALSE       FALSE                
        R/STMlncpp.R R/STMmnreg.R R/STMmu.R R/STMoptbeta.R R/STMreport.R
value   ?            ?            ?         ?              ?            
visible FALSE        FALSE        FALSE     FALSE          FALSE        
        R/STMsigma.R R/STMsigs.R R/STMsubset.R R/summary.STM.R R/tau.R
value   ?            ?           ?             ?               ?      
visible FALSE        FALSE       FALSE         FALSE           FALSE  
        R/textProcessor.R R/thetaPosterior.R R/toLDAvis.R R/topicCorr.R
value   ?                 ?                  ?            ?            
visible FALSE             FALSE              FALSE        FALSE        
        R/topicLasso.R R/topicQuality.R R/writeLdac.R R/zzz.R
value   ?              ?                ?             ?      
visible FALSE          FALSE            FALSE         FALSE  
Casting net 
1 models in net 
Initialization with topicScore. 
Initializing factors using Topic SCORE algorithm.
Initializing loadings by running 10 SCD updates.
.....................................................................................................
Completed E-Step (77 seconds). 
..........................................................................................Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
....Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
20 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
20 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
..Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
20 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
20 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
20 
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
20 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)

Completed M-Step (1005 seconds). 
calculate log likelihood 
Completing Iteration 1 (approx. per word bound = -21.666) 
.....................................................................................................
Completed E-Step (54 seconds). 
..........................................................................................Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
20 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
....Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
20 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
20 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
20 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
..Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
20 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
20 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
20 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
20 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
20 
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
20 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
20 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
20 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
20 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)

Completed M-Step (904 seconds). 
calculate log likelihood 
convergence.check is 0.0005100546 
Completing Iteration 2 (approx. per word bound = -21.655, relative change = 5.101e-04) 
.....................................................................................................
Completed E-Step (41 seconds). 
..........................................................................................Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
....Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
20 
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
20 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
..Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
20 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
20 
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
20 
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)

Completed M-Step (765 seconds). 
calculate log likelihood 
convergence.check is 0.0001869996 
Model Terminated Before Convergence Reached 
2 models in net 
Initialization with topicScore. 
Initializing factors using Topic SCORE algorithm.
Initializing loadings by running 10 SCD updates.
.....................................................................................................
Completed E-Step (104 seconds). 
.....................................................................................................
Completed M-Step (330 seconds). 
calculate log likelihood 
Completing Iteration 1 (approx. per word bound = -21.674) 
.....................................................................................................
Completed E-Step (98 seconds). 
.....................................................................................................
Completed M-Step (329 seconds). 
calculate log likelihood 
convergence.check is 0.0005266543 
Completing Iteration 2 (approx. per word bound = -21.663, relative change = 5.267e-04) 
.....................................................................................................
Completed E-Step (73 seconds). 
.....................................................................................................
Completed M-Step (319 seconds). 
calculate log likelihood 
convergence.check is 0.0002463596 
Model Terminated Before Convergence Reached 
3 models in net 
Initialization with topicScore. 
Initializing factors using Topic SCORE algorithm.
Initializing loadings by running 10 SCD updates.
.....................................................................................................
Completed E-Step (97 seconds). 
.......................................................Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
...................................Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
....Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
..Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)

Completed M-Step (610 seconds). 
calculate log likelihood 
Completing Iteration 1 (approx. per word bound = -21.677) 
.....................................................................................................
Completed E-Step (66 seconds). 
.......................................................Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
...................................Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
....Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
..Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)

Completed M-Step (438 seconds). 
calculate log likelihood 
convergence.check is 0.0008064008 
Completing Iteration 2 (approx. per word bound = -21.660, relative change = 8.064e-04) 
.....................................................................................................
Completed E-Step (68 seconds). 
.......................................................Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
...................................Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
....Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
..Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)

Completed M-Step (424 seconds). 
calculate log likelihood 
convergence.check is 0.0001843267 
Model Terminated Before Convergence Reached 
4 models in net 
Initialization with topicScore. 
Initializing factors using Topic SCORE algorithm.
Initializing loadings by running 10 SCD updates.
.....................................................................................................
Completed E-Step (107 seconds). 
.....................................................................................................
Completed M-Step (348 seconds). 
calculate log likelihood 
Completing Iteration 1 (approx. per word bound = -21.669) 
.....................................................................................................
Completed E-Step (78 seconds). 
.....................................................................................................
Completed M-Step (341 seconds). 
calculate log likelihood 
convergence.check is 0.0005695543 
Completing Iteration 2 (approx. per word bound = -21.657, relative change = 5.696e-04) 
.....................................................................................................
Completed E-Step (60 seconds). 
.....................................................................................................
Completed M-Step (322 seconds). 
calculate log likelihood 
convergence.check is 0.0001701804 
Model Terminated Before Convergence Reached 
5 models in net 
Initialization with topicScore. 
Initializing factors using Topic SCORE algorithm.
Initializing loadings by running 10 SCD updates.
.....................................................................................................
Completed E-Step (130 seconds). 
.....................................................................................................
Completed M-Step (307 seconds). 
calculate log likelihood 
Completing Iteration 1 (approx. per word bound = -21.903) 
.....................................................................................................
Completed E-Step (80 seconds). 
.....................................................................................................
Completed M-Step (287 seconds). 
calculate log likelihood 
convergence.check is 0.01008141 
Completing Iteration 2 (approx. per word bound = -21.683, relative change = 1.008e-02) 
.....................................................................................................
Completed E-Step (75 seconds). 
.....................................................................................................
Completed M-Step (278 seconds). 
calculate log likelihood 
convergence.check is 0.0004102282 
Model Terminated Before Convergence Reached 
6 models in net 
Initialization with topicScore. 
Initializing factors using Topic SCORE algorithm.
Initializing loadings by running 10 SCD updates.
.....................................................................................................
Completed E-Step (124 seconds). 
.....................................................................................................
Completed M-Step (310 seconds). 
calculate log likelihood 
Completing Iteration 1 (approx. per word bound = -21.676) 
.....................................................................................................
Completed E-Step (75 seconds). 
.....................................................................................................
Completed M-Step (298 seconds). 
calculate log likelihood 
convergence.check is 0.0008729146 
Completing Iteration 2 (approx. per word bound = -21.657, relative change = 8.729e-04) 
.....................................................................................................
Completed E-Step (83 seconds). 
.....................................................................................................
Completed M-Step (296 seconds). 
calculate log likelihood 
convergence.check is 0.0001099716 
Model Terminated Before Convergence Reached 
7 models in net 
Initialization with topicScore. 
Initializing factors using Topic SCORE algorithm.
Initializing loadings by running 10 SCD updates.
.....................................................................................................
Completed E-Step (101 seconds). 
.....................................................................................................
Completed M-Step (310 seconds). 
calculate log likelihood 
Completing Iteration 1 (approx. per word bound = -23.824) 
.....................................................................................................
Completed E-Step (67 seconds). 
.....................................................................................................
Completed M-Step (313 seconds). 
calculate log likelihood 
convergence.check is 0.08629155 
Completing Iteration 2 (approx. per word bound = -21.768, relative change = 8.629e-02) 
.....................................................................................................
Completed E-Step (69 seconds). 
.....................................................................................................
Completed M-Step (288 seconds). 
calculate log likelihood 
convergence.check is 0.001886094 
Model Terminated Before Convergence Reached 
8 models in net 
Initialization with topicScore. 
Initializing factors using Topic SCORE algorithm.
Initializing loadings by running 10 SCD updates.
.....................................................................................................
Completed E-Step (116 seconds). 
.....................................................................................................
Completed M-Step (297 seconds). 
calculate log likelihood 
Completing Iteration 1 (approx. per word bound = -21.664) 
.....................................................................................................
Completed E-Step (77 seconds). 
.....................................................................................................
Completed M-Step (271 seconds). 
calculate log likelihood 
convergence.check is 0.0002083251 
Completing Iteration 2 (approx. per word bound = -21.659, relative change = 2.083e-04) 
.....................................................................................................
Completed E-Step (74 seconds). 
.....................................................................................................
Completed M-Step (265 seconds). 
calculate log likelihood 
convergence.check is 8.006556e-05 
Model Terminated Before Convergence Reached 
9 models in net 
Initialization with topicScore. 
Initializing factors using Topic SCORE algorithm.
Initializing loadings by running 10 SCD updates.
.....................................................................................................
Completed E-Step (124 seconds). 
.....................................................................................................
Completed M-Step (338 seconds). 
calculate log likelihood 
Completing Iteration 1 (approx. per word bound = -21.669) 
.....................................................................................................
Completed E-Step (69 seconds). 
.....................................................................................................
Completed M-Step (324 seconds). 
calculate log likelihood 
convergence.check is 0.0004426754 
Completing Iteration 2 (approx. per word bound = -21.659, relative change = 4.427e-04) 
.....................................................................................................
Completed E-Step (63 seconds). 
.....................................................................................................
Completed M-Step (323 seconds). 
calculate log likelihood 
convergence.check is 0.0001354347 
Model Terminated Before Convergence Reached 
10 models in net 
Initialization with topicScore. 
Initializing factors using Topic SCORE algorithm.
Initializing loadings by running 10 SCD updates.
.....................................................................................................
Completed E-Step (116 seconds). 
.....................................................................................................
Completed M-Step (322 seconds). 
calculate log likelihood 
Completing Iteration 1 (approx. per word bound = -21.860) 
.....................................................................................................
Completed E-Step (71 seconds). 
.....................................................................................................
Completed M-Step (320 seconds). 
calculate log likelihood 
convergence.check is 0.008709197 
Completing Iteration 2 (approx. per word bound = -21.669, relative change = 8.709e-03) 
.....................................................................................................
Completed E-Step (70 seconds). 
.....................................................................................................
Completed M-Step (313 seconds). 
calculate log likelihood 
convergence.check is 0.0002746406 
Model Terminated Before Convergence Reached 
11 models in net 
Initialization with topicScore. 
Initializing factors using Topic SCORE algorithm.
Initializing loadings by running 10 SCD updates.
.....................................................................................................
Completed E-Step (138 seconds). 
.....................................................................................................
Completed M-Step (357 seconds). 
calculate log likelihood 
Completing Iteration 1 (approx. per word bound = -21.666) 
.....................................................................................................
Completed E-Step (90 seconds). 
.....................................................................................................
Completed M-Step (344 seconds). 
calculate log likelihood 
convergence.check is 0.0003726478 
Completing Iteration 2 (approx. per word bound = -21.658, relative change = 3.726e-04) 
.....................................................................................................
Completed E-Step (75 seconds). 
.....................................................................................................
Completed M-Step (336 seconds). 
calculate log likelihood 
convergence.check is 0.0001700133 
Model Terminated Before Convergence Reached 
12 models in net 
Initialization with topicScore. 
Initializing factors using Topic SCORE algorithm.
Initializing loadings by running 10 SCD updates.
.....................................................................................................
Completed E-Step (149 seconds). 
..........................Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.........................Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
....Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
...................................Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
....Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
..Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)

Completed M-Step (405 seconds). 
calculate log likelihood 
Completing Iteration 1 (approx. per word bound = -22.114) 
.....................................................................................................
Completed E-Step (80 seconds). 
.......................................................Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
........................................Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
..Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.
Completed M-Step (359 seconds). 
calculate log likelihood 
convergence.check is 0.01823306 
Completing Iteration 2 (approx. per word bound = -21.710, relative change = 1.823e-02) 
.....................................................................................................
Completed E-Step (77 seconds). 
................................................................................................Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
..Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
...
Completed M-Step (341 seconds). 
calculate log likelihood 
convergence.check is 0.0006460146 
Model Terminated Before Convergence Reached 
13 models in net 
Initialization with topicScore. 
Initializing factors using Topic SCORE algorithm.
Initializing loadings by running 10 SCD updates.
.....................................................................................................
Completed E-Step (121 seconds). 
.....................................................................................................
Completed M-Step (338 seconds). 
calculate log likelihood 
Completing Iteration 1 (approx. per word bound = -21.667) 
.....................................................................................................
Completed E-Step (79 seconds). 
.....................................................................................................
Completed M-Step (328 seconds). 
calculate log likelihood 
convergence.check is 0.0004960795 
Completing Iteration 2 (approx. per word bound = -21.657, relative change = 4.961e-04) 
.....................................................................................................
Completed E-Step (65 seconds). 
.....................................................................................................
Completed M-Step (320 seconds). 
calculate log likelihood 
convergence.check is 0.0001460539 
Model Terminated Before Convergence Reached 
14 models in net 
Initialization with topicScore. 
Initializing factors using Topic SCORE algorithm.
Initializing loadings by running 10 SCD updates.
.....................................................................................................
Completed E-Step (143 seconds). 
.....................................................................................................
Completed M-Step (362 seconds). 
calculate log likelihood 
Completing Iteration 1 (approx. per word bound = -21.666) 
.....................................................................................................
Completed E-Step (85 seconds). 
.....................................................................................................
Completed M-Step (354 seconds). 
calculate log likelihood 
convergence.check is 0.0004161374 
Completing Iteration 2 (approx. per word bound = -21.657, relative change = 4.161e-04) 
.....................................................................................................
Completed E-Step (77 seconds). 
.....................................................................................................
Completed M-Step (347 seconds). 
calculate log likelihood 
convergence.check is 0.0001587621 
Model Terminated Before Convergence Reached 
15 models in net 
Initialization with topicScore. 
Initializing factors using Topic SCORE algorithm.
Initializing loadings by running 10 SCD updates.
.....................................................................................................
Completed E-Step (140 seconds). 
.....................................................................................................
Completed M-Step (351 seconds). 
calculate log likelihood 
Completing Iteration 1 (approx. per word bound = -21.666) 
.....................................................................................................
Completed E-Step (85 seconds). 
.....................................................................................................
Completed M-Step (330 seconds). 
calculate log likelihood 
convergence.check is 0.0003955268 
Completing Iteration 2 (approx. per word bound = -21.657, relative change = 3.955e-04) 
.....................................................................................................
Completed E-Step (78 seconds). 
...................................................................................................Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
..
Completed M-Step (324 seconds). 
calculate log likelihood 
convergence.check is 0.000136684 
Model Terminated Before Convergence Reached 
16 models in net 
Initialization with topicScore. 
Initializing factors using Topic SCORE algorithm.
Initializing loadings by running 10 SCD updates.
.....................................................................................................
Completed E-Step (144 seconds). 
.....................................................................................................
Completed M-Step (320 seconds). 
calculate log likelihood 
Completing Iteration 1 (approx. per word bound = -21.662) 
.....................................................................................................
Completed E-Step (96 seconds). 
.....................................................................................................
Completed M-Step (250 seconds). 
calculate log likelihood 
convergence.check is 0.0002452606 
Completing Iteration 2 (approx. per word bound = -21.657, relative change = 2.453e-04) 
.....................................................................................................
Completed E-Step (46 seconds). 
.....................................................................................................
Completed M-Step (226 seconds). 
calculate log likelihood 
convergence.check is 8.311671e-05 
Model Terminated Before Convergence Reached 
17 models in net 
Initialization with topicScore. 
Initializing factors using Topic SCORE algorithm.
Initializing loadings by running 10 SCD updates.
.....................................................................................................
Completed E-Step (155 seconds). 
.....................................................................................................
Completed M-Step (254 seconds). 
calculate log likelihood 
Completing Iteration 1 (approx. per word bound = -21.892) 
.....................................................................................................
Completed E-Step (73 seconds). 
.....................................................................................................
Completed M-Step (243 seconds). 
calculate log likelihood 
convergence.check is 0.009683737 
Completing Iteration 2 (approx. per word bound = -21.680, relative change = 9.684e-03) 
.....................................................................................................
Completed E-Step (68 seconds). 
.....................................................................................................
Completed M-Step (233 seconds). 
calculate log likelihood 
convergence.check is 0.0003271091 
Model Terminated Before Convergence Reached 
18 models in net 
Initialization with topicScore. 
Initializing factors using Topic SCORE algorithm.
Initializing loadings by running 10 SCD updates.
.....................................................................................................
Completed E-Step (82 seconds). 
...................................................Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
....Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
...................................Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
....Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
..Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)

Completed M-Step (643 seconds). 
calculate log likelihood 
Completing Iteration 1 (approx. per word bound = -21.671) 
.....................................................................................................
Completed E-Step (64 seconds). 
...................................................Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
....Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
...................................Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
....Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
..Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)

Completed M-Step (492 seconds). 
calculate log likelihood 
convergence.check is 0.000456347 
Completing Iteration 2 (approx. per word bound = -21.661, relative change = 4.563e-04) 
.....................................................................................................
Completed E-Step (56 seconds). 
...................................................Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
....Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
...................................Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
....Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
..Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)

Completed M-Step (446 seconds). 
calculate log likelihood 
convergence.check is 0.0001713407 
Model Terminated Before Convergence Reached 
19 models in net 
Initialization with topicScore. 
Initializing factors using Topic SCORE algorithm.
Initializing loadings by running 10 SCD updates.
.....................................................................................................
Completed E-Step (128 seconds). 
.....................................................................................................
Completed M-Step (333 seconds). 
calculate log likelihood 
Completing Iteration 1 (approx. per word bound = -21.668) 
.....................................................................................................
Completed E-Step (63 seconds). 
.....................................................................................................
Completed M-Step (322 seconds). 
calculate log likelihood 
convergence.check is 0.0004381533 
Completing Iteration 2 (approx. per word bound = -21.659, relative change = 4.382e-04) 
.....................................................................................................
Completed E-Step (55 seconds). 
.....................................................................................................
Completed M-Step (316 seconds). 
calculate log likelihood 
convergence.check is 0.0001410225 
Model Terminated Before Convergence Reached 
20 models in net 
Initialization with topicScore. 
Initializing factors using Topic SCORE algorithm.
Initializing loadings by running 10 SCD updates.
.....................................................................................................
Completed E-Step (121 seconds). 
.....................................................................................................
Completed M-Step (293 seconds). 
calculate log likelihood 
Completing Iteration 1 (approx. per word bound = -21.665) 
.....................................................................................................
Completed E-Step (80 seconds). 
.....................................................................................................
Completed M-Step (274 seconds). 
calculate log likelihood 
convergence.check is 0.0002224347 
Completing Iteration 2 (approx. per word bound = -21.661, relative change = 2.224e-04) 
.....................................................................................................
Completed E-Step (74 seconds). 
.....................................................................................................
Completed M-Step (265 seconds). 
calculate log likelihood 
convergence.check is 0.0001556963 
Model Terminated Before Convergence Reached 
21 models in net 
Beginning Spectral Initialization 
	 Calculating the gram matrix...
	 Finding anchor words...
 	........
	 Recovering initialization...
 	............
Initialization complete.
.....................................................................................................
Completed E-Step (62 seconds). 
.....................................................................................................
Completed M-Step (347 seconds). 
calculate log likelihood 
Completing Iteration 1 (approx. per word bound = -21.674) 
.....................................................................................................
Completed E-Step (47 seconds). 
.....................................................................................................
Completed M-Step (376 seconds). 
calculate log likelihood 
convergence.check is 0.0007447938 
Completing Iteration 2 (approx. per word bound = -21.658, relative change = 7.448e-04) 
.....................................................................................................
Completed E-Step (37 seconds). 
.....................................................................................................
Completed M-Step (368 seconds). 
calculate log likelihood 
convergence.check is 0.0003255188 
Model Terminated Before Convergence Reached 
22 models in net 
Beginning Random Initialization 
Initialization with Poisson NMF 
.....................................................................................................
Completed E-Step (109 seconds). 
.....................................................................................................
Completed M-Step (220 seconds). 
calculate log likelihood 
Completing Iteration 1 (approx. per word bound = -27.736) 
.....................................................................................................
Completed E-Step (57 seconds). 
.....................................................................................................
Completed M-Step (214 seconds). 
calculate log likelihood 
convergence.check is 0.2184877 
Completing Iteration 2 (approx. per word bound = -21.676, relative change = 2.185e-01) 
.....................................................................................................
Completed E-Step (66 seconds). 
.....................................................................................................
Completed M-Step (213 seconds). 
calculate log likelihood 
convergence.check is 3.5906e-05 
Model Terminated Before Convergence Reached 
23 models in net 
Beginning Random Initialization 
Initialization with Poisson NMF 
.....................................................................................................
Completed E-Step (107 seconds). 
.....................................................................................................
Completed M-Step (200 seconds). 
calculate log likelihood 
Completing Iteration 1 (approx. per word bound = -27.731) 
.....................................................................................................
Completed E-Step (54 seconds). 
.....................................................................................................
Completed M-Step (212 seconds). 
calculate log likelihood 
convergence.check is 0.2183201 
Completing Iteration 2 (approx. per word bound = -21.677, relative change = 2.183e-01) 
.....................................................................................................
Completed E-Step (57 seconds). 
.....................................................................................................
Completed M-Step (225 seconds). 
calculate log likelihood 
convergence.check is 1.504521e-05 
Model Terminated Before Convergence Reached 
24 models in net 
Beginning Random Initialization 
Initialization with Poisson NMF 
.....................................................................................................
Completed E-Step (101 seconds). 
.....................................................................................................
Completed M-Step (228 seconds). 
calculate log likelihood 
Completing Iteration 1 (approx. per word bound = -27.738) 
.....................................................................................................
Completed E-Step (56 seconds). 
.....................................................................................................
Completed M-Step (225 seconds). 
calculate log likelihood 
convergence.check is 0.2185106 
Completing Iteration 2 (approx. per word bound = -21.677, relative change = 2.185e-01) 
.....................................................................................................
Completed E-Step (59 seconds). 
.....................................................................................................
Completed M-Step (229 seconds). 
calculate log likelihood 
convergence.check is 4.578334e-05 
Model Terminated Before Convergence Reached 
25 models in net 
Beginning Random Initialization 
Initialization with Poisson NMF 
.....................................................................................................
Completed E-Step (107 seconds). 
.....................................................................................................
Completed M-Step (207 seconds). 
calculate log likelihood 
Completing Iteration 1 (approx. per word bound = -27.827) 
.....................................................................................................
Completed E-Step (53 seconds). 
.....................................................................................................
Completed M-Step (223 seconds). 
calculate log likelihood 
convergence.check is 0.2210229 
Completing Iteration 2 (approx. per word bound = -21.676, relative change = 2.210e-01) 
.....................................................................................................
Completed E-Step (52 seconds). 
.....................................................................................................
Completed M-Step (233 seconds). 
calculate log likelihood 
convergence.check is 7.978498e-05 
Model Terminated Before Convergence Reached 
26 models in net 
Beginning Random Initialization 
Initialization with Poisson NMF 
.....................................................................................................
Completed E-Step (121 seconds). 
.....................................................................................................
Completed M-Step (205 seconds). 
calculate log likelihood 
Completing Iteration 1 (approx. per word bound = -27.755) 
.....................................................................................................
Completed E-Step (64 seconds). 
.....................................................................................................
Completed M-Step (217 seconds). 
calculate log likelihood 
convergence.check is 0.218985 
Completing Iteration 2 (approx. per word bound = -21.677, relative change = 2.190e-01) 
.....................................................................................................
Completed E-Step (67 seconds). 
.....................................................................................................
Completed M-Step (235 seconds). 
calculate log likelihood 
convergence.check is 0.0001874321 
Model Terminated Before Convergence Reached 
27 models in net 
Beginning Random Initialization 
Initialization with Poisson NMF 
.....................................................................................................
Completed E-Step (102 seconds). 
.....................................................................................................
Completed M-Step (212 seconds). 
calculate log likelihood 
Completing Iteration 1 (approx. per word bound = -27.891) 
.....................................................................................................
Completed E-Step (55 seconds). 
.....................................................................................................
Completed M-Step (212 seconds). 
calculate log likelihood 
convergence.check is 0.2228137 
Completing Iteration 2 (approx. per word bound = -21.677, relative change = 2.228e-01) 
.....................................................................................................
Completed E-Step (60 seconds). 
.....................................................................................................
Completed M-Step (224 seconds). 
calculate log likelihood 
convergence.check is 5.683172e-05 
Model Terminated Before Convergence Reached 
28 models in net 
Beginning Random Initialization 
Initialization with Poisson NMF 
.....................................................................................................
Completed E-Step (120 seconds). 
.....................................................................................................
Completed M-Step (219 seconds). 
calculate log likelihood 
Completing Iteration 1 (approx. per word bound = -27.888) 
.....................................................................................................
Completed E-Step (69 seconds). 
.....................................................................................................
Completed M-Step (220 seconds). 
calculate log likelihood 
convergence.check is 0.2227581 
Completing Iteration 2 (approx. per word bound = -21.676, relative change = 2.228e-01) 
.....................................................................................................
Completed E-Step (61 seconds). 
.....................................................................................................
Completed M-Step (215 seconds). 
calculate log likelihood 
convergence.check is 3.157759e-05 
Model Terminated Before Convergence Reached 
29 models in net 
Beginning Random Initialization 
Initialization with Poisson NMF 
.....................................................................................................
Completed E-Step (113 seconds). 
.....................................................................................................
Completed M-Step (223 seconds). 
calculate log likelihood 
Completing Iteration 1 (approx. per word bound = -27.730) 
.....................................................................................................
Completed E-Step (58 seconds). 
.....................................................................................................
Completed M-Step (205 seconds). 
calculate log likelihood 
convergence.check is 0.2183181 
Completing Iteration 2 (approx. per word bound = -21.676, relative change = 2.183e-01) 
.....................................................................................................
Completed E-Step (49 seconds). 
.....................................................................................................
Completed M-Step (189 seconds). 
calculate log likelihood 
convergence.check is 3.077895e-05 
Model Terminated Before Convergence Reached 
30 models in net 
Beginning Random Initialization 
Initialization with Poisson NMF 
.....................................................................................................
Completed E-Step (103 seconds). 
.....................................................................................................
Completed M-Step (182 seconds). 
calculate log likelihood 
Completing Iteration 1 (approx. per word bound = -27.910) 
.....................................................................................................
Completed E-Step (49 seconds). 
.....................................................................................................
Completed M-Step (179 seconds). 
calculate log likelihood 
convergence.check is 0.2233868 
Completing Iteration 2 (approx. per word bound = -21.676, relative change = 2.234e-01) 
.....................................................................................................
Completed E-Step (50 seconds). 
.....................................................................................................
Completed M-Step (179 seconds). 
calculate log likelihood 
convergence.check is 2.851612e-05 
Model Terminated Before Convergence Reached 
31 models in net 
Beginning Random Initialization 
Initialization with Poisson NMF 
.....................................................................................................
Completed E-Step (103 seconds). 
.....................................................................................................
Completed M-Step (192 seconds). 
calculate log likelihood 
Completing Iteration 1 (approx. per word bound = -27.819) 
.....................................................................................................
Completed E-Step (59 seconds). 
.....................................................................................................
Completed M-Step (189 seconds). 
calculate log likelihood 
convergence.check is 0.2208017 
Completing Iteration 2 (approx. per word bound = -21.676, relative change = 2.208e-01) 
.....................................................................................................
Completed E-Step (62 seconds). 
.....................................................................................................
Completed M-Step (189 seconds). 
calculate log likelihood 
convergence.check is 2.741712e-05 
Model Terminated Before Convergence Reached 
32 models in net 
Beginning Random Initialization 
Initialization with Poisson NMF 
.....................................................................................................
Completed E-Step (96 seconds). 
.....................................................................................................
Completed M-Step (205 seconds). 
calculate log likelihood 
Completing Iteration 1 (approx. per word bound = -27.807) 
.....................................................................................................
Completed E-Step (56 seconds). 
.....................................................................................................
Completed M-Step (201 seconds). 
calculate log likelihood 
convergence.check is 0.2205048 
Completing Iteration 2 (approx. per word bound = -21.676, relative change = 2.205e-01) 
.....................................................................................................
Completed E-Step (53 seconds). 
.....................................................................................................
Completed M-Step (199 seconds). 
calculate log likelihood 
convergence.check is 5.467304e-05 
Model Terminated Before Convergence Reached 
33 models in net 
Beginning Random Initialization 
Initialization with Poisson NMF 
.....................................................................................................
Completed E-Step (114 seconds). 
.....................................................................................................
Completed M-Step (198 seconds). 
calculate log likelihood 
Completing Iteration 1 (approx. per word bound = -27.697) 
.....................................................................................................
Completed E-Step (55 seconds). 
.....................................................................................................
Completed M-Step (194 seconds). 
calculate log likelihood 
convergence.check is 0.2173253 
Completing Iteration 2 (approx. per word bound = -21.678, relative change = 2.173e-01) 
.....................................................................................................
Completed E-Step (53 seconds). 
.....................................................................................................
Completed M-Step (198 seconds). 
calculate log likelihood 
convergence.check is 3.960399e-05 
Model Terminated Before Convergence Reached 
34 models in net 
Beginning Random Initialization 
Initialization with Poisson NMF 
.....................................................................................................
Completed E-Step (120 seconds). 
.....................................................................................................
Completed M-Step (229 seconds). 
calculate log likelihood 
Completing Iteration 1 (approx. per word bound = -27.907) 
.....................................................................................................
Completed E-Step (70 seconds). 
.....................................................................................................
Completed M-Step (228 seconds). 
calculate log likelihood 
convergence.check is 0.2232478 
Completing Iteration 2 (approx. per word bound = -21.677, relative change = 2.232e-01) 
.....................................................................................................
Completed E-Step (69 seconds). 
.....................................................................................................
Completed M-Step (224 seconds). 
calculate log likelihood 
convergence.check is 3.615368e-05 
Model Terminated Before Convergence Reached 
35 models in net 
Beginning Random Initialization 
Initialization with Poisson NMF 
.....................................................................................................
Completed E-Step (129 seconds). 
.....................................................................................................
Completed M-Step (208 seconds). 
calculate log likelihood 
Completing Iteration 1 (approx. per word bound = -27.884) 
.....................................................................................................
Completed E-Step (54 seconds). 
.....................................................................................................
Completed M-Step (211 seconds). 
calculate log likelihood 
convergence.check is 0.2226194 
Completing Iteration 2 (approx. per word bound = -21.676, relative change = 2.226e-01) 
.....................................................................................................
Completed E-Step (57 seconds). 
.....................................................................................................
Completed M-Step (221 seconds). 
calculate log likelihood 
convergence.check is 1.551581e-05 
Model Terminated Before Convergence Reached 
36 models in net 
Beginning Random Initialization 
Initialization with Poisson NMF 
.....................................................................................................
Completed E-Step (121 seconds). 
.....................................................................................................
Completed M-Step (219 seconds). 
calculate log likelihood 
Completing Iteration 1 (approx. per word bound = -27.858) 
.....................................................................................................
Completed E-Step (57 seconds). 
.....................................................................................................
Completed M-Step (216 seconds). 
calculate log likelihood 
convergence.check is 0.2218854 
Completing Iteration 2 (approx. per word bound = -21.677, relative change = 2.219e-01) 
.....................................................................................................
Completed E-Step (60 seconds). 
.....................................................................................................
Completed M-Step (215 seconds). 
calculate log likelihood 
convergence.check is 1.782215e-05 
Model Terminated Before Convergence Reached 
37 models in net 
Beginning Random Initialization 
Initialization with Poisson NMF 
.....................................................................................................
Completed E-Step (131 seconds). 
.....................................................................................................
Completed M-Step (202 seconds). 
calculate log likelihood 
Completing Iteration 1 (approx. per word bound = -27.755) 
.....................................................................................................
Completed E-Step (49 seconds). 
.....................................................................................................
Completed M-Step (212 seconds). 
calculate log likelihood 
convergence.check is 0.2189632 
Completing Iteration 2 (approx. per word bound = -21.677, relative change = 2.190e-01) 
.....................................................................................................
Completed E-Step (52 seconds). 
.....................................................................................................
Completed M-Step (221 seconds). 
calculate log likelihood 
convergence.check is 7.055241e-06 
Model Terminated Before Convergence Reached 
38 models in net 
Beginning Random Initialization 
Initialization with Poisson NMF 
.....................................................................................................
Completed E-Step (113 seconds). 
.....................................................................................................
Completed M-Step (223 seconds). 
calculate log likelihood 
Completing Iteration 1 (approx. per word bound = -28.844) 
.....................................................................................................
Completed E-Step (64 seconds). 
.....................................................................................................
Completed M-Step (221 seconds). 
calculate log likelihood 
convergence.check is 0.2484754 
Completing Iteration 2 (approx. per word bound = -21.677, relative change = 2.485e-01) 
.....................................................................................................
Completed E-Step (63 seconds). 
.....................................................................................................
Completed M-Step (221 seconds). 
calculate log likelihood 
convergence.check is 2.741497e-05 
Model Terminated Before Convergence Reached 
39 models in net 
Beginning Random Initialization 
Initialization with Poisson NMF 
.....................................................................................................
Completed E-Step (123 seconds). 
.....................................................................................................
Completed M-Step (214 seconds). 
calculate log likelihood 
Completing Iteration 1 (approx. per word bound = -27.766) 
.....................................................................................................
Completed E-Step (62 seconds). 
.....................................................................................................
Completed M-Step (216 seconds). 
calculate log likelihood 
convergence.check is 0.2193281 
Completing Iteration 2 (approx. per word bound = -21.676, relative change = 2.193e-01) 
.....................................................................................................
Completed E-Step (59 seconds). 
.....................................................................................................
Completed M-Step (210 seconds). 
calculate log likelihood 
convergence.check is 2.377649e-05 
Model Terminated Before Convergence Reached 
40 models in net 
Beginning Random Initialization 
Initialization with Poisson NMF 
.....................................................................................................
Completed E-Step (107 seconds). 
.....................................................................................................
Completed M-Step (204 seconds). 
calculate log likelihood 
Completing Iteration 1 (approx. per word bound = -27.813) 
.....................................................................................................
Completed E-Step (52 seconds). 
.....................................................................................................
Completed M-Step (214 seconds). 
calculate log likelihood 
convergence.check is 0.2206166 
Completing Iteration 2 (approx. per word bound = -21.677, relative change = 2.206e-01) 
.....................................................................................................
Completed E-Step (54 seconds). 
.....................................................................................................
Completed M-Step (220 seconds). 
calculate log likelihood 
convergence.check is 1.082376e-05 
Model Terminated Before Convergence Reached 
41 models in net 
Beginning Random Initialization 
Initialization with Poisson NMF 
.....................................................................................................
Completed E-Step (130 seconds). 
.....................................................................................................
Completed M-Step (219 seconds). 
calculate log likelihood 
Completing Iteration 1 (approx. per word bound = -27.765) 
.....................................................................................................
Completed E-Step (64 seconds). 
.....................................................................................................
Completed M-Step (227 seconds). 
calculate log likelihood 
convergence.check is 0.2192931 
Completing Iteration 2 (approx. per word bound = -21.676, relative change = 2.193e-01) 
.....................................................................................................
Completed E-Step (67 seconds). 
.....................................................................................................
Completed M-Step (223 seconds). 
calculate log likelihood 
convergence.check is 2.789628e-05 
Model Terminated Before Convergence Reached 
Running select models 
1 select model run 
Beginning Spectral Initialization 
	 Calculating the gram matrix...
	 Finding anchor words...
 	........
	 Recovering initialization...
 	............
Initialization complete.
.....................................................................................................
Completed E-Step (67 seconds). 
.....................................................................................................
Completed M-Step (356 seconds). 
calculate log likelihood 
Completing Iteration 1 (approx. per word bound = -21.674) 
.....................................................................................................
Completed E-Step (52 seconds). 
.....................................................................................................
Completed M-Step (388 seconds). 
calculate log likelihood 
convergence.check is 0.0007447938 
Completing Iteration 2 (approx. per word bound = -21.658, relative change = 7.448e-04) 
.....................................................................................................
Completed E-Step (40 seconds). 
.....................................................................................................
Completed M-Step (380 seconds). 
calculate log likelihood 
convergence.check is 0.0003255188 
Completing Iteration 3 (approx. per word bound = -21.651, relative change = 3.255e-04) 
.....................................................................................................
Completed E-Step (31 seconds). 
.....................................................................................................
Completed M-Step (368 seconds). 
calculate log likelihood 
convergence.check is 0.0001267272 
Completing Iteration 4 (approx. per word bound = -21.648, relative change = 1.267e-04) 
.....................................................................................................
Completed E-Step (30 seconds). 
.....................................................................................................
Completed M-Step (365 seconds). 
calculate log likelihood 
convergence.check is 6.415207e-05 
Completing Iteration 5 (approx. per word bound = -21.647, relative change = 6.415e-05) 
Topic 1: Gene2944, Gene1905, Gene1321, Gene1135, Gene2259 
 Topic 2: Gene2567, Gene286, Gene939, Gene2413, Gene1463 
 Topic 3: Gene913, Gene156, Gene2227, Gene191, Gene196 
 Topic 4: Gene2567, Gene939, Gene1844, Gene465, Gene259 
 Topic 5: Gene2863, Gene1463, Gene1823, Gene2524, Gene1194 
 Topic 6: Gene2165, Gene2158, Gene2078, Gene1332, Gene2987 
 Topic 7: Gene1905, Gene1321, Gene817, Gene2073, Gene2234 
 Topic 8: Gene2078, Gene2278, Gene2541, Gene249, Gene1027 
Aspect 1: Gene790, Gene2086, Gene425, Gene736, Gene237 
 Aspect 2: Gene13, Gene1206, Gene981, Gene1018, Gene687 
 Aspect 3: Gene2417, Gene1196, Gene1677, Gene588, Gene2067 
 Aspect 4: Gene1667, Gene81, Gene2239, Gene2469, Gene934 
 Aspect 5: Gene1215, Gene1097, Gene2316, Gene114, Gene993 
 Aspect 6: Gene2469, Gene2871, Gene885, Gene1042, Gene2054 
 Aspect 7: Gene2900, Gene745, Gene409, Gene333, Gene913 
 Aspect 8: Gene1444, Gene1097, Gene1610, Gene745, Gene1399 
 Aspect 9: Gene2765, Gene1301, Gene2007, Gene1783, Gene267 
 Aspect 10: Gene2285, Gene2847, Gene2043, Gene2173, Gene573 
.....................................................................................................
Completed E-Step (28 seconds). 
.....................................................................................................
Completed M-Step (361 seconds). 
calculate log likelihood 
convergence.check is 2.878341e-05 
Completing Iteration 6 (approx. per word bound = -21.646, relative change = 2.878e-05) 
.....................................................................................................
Completed E-Step (27 seconds). 
.....................................................................................................
Completed M-Step (363 seconds). 
calculate log likelihood 
convergence.check is 1.600563e-05 
Completing Iteration 7 (approx. per word bound = -21.646, relative change = 1.601e-05) 
.....................................................................................................
Completed E-Step (26 seconds). 
.....................................................................................................
Completed M-Step (361 seconds). 
calculate log likelihood 
convergence.check is 1.188235e-05 
Completing Iteration 8 (approx. per word bound = -21.646, relative change = 1.188e-05) 
.....................................................................................................
Completed E-Step (28 seconds). 
.....................................................................................................
Completed M-Step (359 seconds). 
calculate log likelihood 
convergence.check is 9.464548e-06 
Completing Iteration 9 (approx. per word bound = -21.645, relative change = 9.465e-06) 
.....................................................................................................
Completed E-Step (27 seconds). 
.....................................................................................................
Completed M-Step (361 seconds). 
calculate log likelihood 
convergence.check is 1.390367e-05 
Completing Iteration 10 (approx. per word bound = -21.645, relative change = 1.390e-05) 
Topic 1: Gene1321, Gene1905, Gene2944, Gene817, Gene1135 
 Topic 2: Gene286, Gene2567, Gene1204, Gene939, Gene2413 
 Topic 3: Gene913, Gene156, Gene2227, Gene191, Gene196 
 Topic 4: Gene2567, Gene939, Gene1844, Gene465, Gene259 
 Topic 5: Gene2863, Gene1463, Gene1823, Gene2524, Gene1194 
 Topic 6: Gene2165, Gene2158, Gene1332, Gene2987, Gene2078 
 Topic 7: Gene1905, Gene1321, Gene817, Gene1135, Gene2234 
 Topic 8: Gene2078, Gene2167, Gene297, Gene2278, Gene249 
Aspect 1: Gene2086, Gene425, Gene1077, Gene333, Gene2719 
 Aspect 2: Gene2198, Gene981, Gene246, Gene1077, Gene687 
 Aspect 3: Gene2417, Gene1721, Gene588, Gene1677, Gene1332 
 Aspect 4: Gene2469, Gene81, Gene1732, Gene107, Gene1764 
 Aspect 5: Gene1215, Gene2316, Gene2657, Gene114, Gene1780 
 Aspect 6: Gene2469, Gene885, Gene2871, Gene2285, Gene1042 
 Aspect 7: Gene2900, Gene214, Gene409, Gene745, Gene2643 
 Aspect 8: Gene1444, Gene812, Gene1656, Gene1390, Gene1610 
 Aspect 9: Gene57, Gene1301, Gene101, Gene830, Gene384 
 Aspect 10: Gene2043, Gene1170, Gene2173, Gene2847, Gene1028 
.....................................................................................................
Completed E-Step (28 seconds). 
.....................................................................................................
Completed M-Step (360 seconds). 
calculate log likelihood 
convergence.check is 3.346596e-06 
Completing Iteration 11 (approx. per word bound = -21.645, relative change = 3.347e-06) 
.....................................................................................................
Completed E-Step (26 seconds). 
.....................................................................................................
Completed M-Step (362 seconds). 
calculate log likelihood 
convergence.check is 2.328615e-06 
Completing Iteration 12 (approx. per word bound = -21.645, relative change = 2.329e-06) 
.....................................................................................................
Completed E-Step (27 seconds). 
.....................................................................................................
Completed M-Step (362 seconds). 
calculate log likelihood 
convergence.check is 1.676461e-06 
Completing Iteration 13 (approx. per word bound = -21.645, relative change = 1.676e-06) 
.....................................................................................................
Completed E-Step (25 seconds). 
.....................................................................................................
Completed M-Step (361 seconds). 
calculate log likelihood 
convergence.check is 7.787118e-07 
Model Converged 
2 select model run 
Initialization with topicScore. 
Initializing factors using Topic SCORE algorithm.
Initializing loadings by running 10 SCD updates.
.....................................................................................................
Completed E-Step (109 seconds). 
..........................................................................................Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
....Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
20 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
20 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
..Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
20 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
20 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
20 
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
20 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)

Completed M-Step (946 seconds). 
calculate log likelihood 
Completing Iteration 1 (approx. per word bound = -21.666) 
.....................................................................................................
Completed E-Step (47 seconds). 
..........................................................................................Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
20 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
....Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
20 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
20 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
20 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
..Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
20 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
20 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
20 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
20 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
20 
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
20 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
20 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
20 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
20 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)

Completed M-Step (593 seconds). 
calculate log likelihood 
convergence.check is 0.0005100546 
Completing Iteration 2 (approx. per word bound = -21.655, relative change = 5.101e-04) 
.....................................................................................................
Completed E-Step (15 seconds). 
..........................................................................................Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
....Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
20 
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
20 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
..Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
20 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
20 
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
20 
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)

Completed M-Step (424 seconds). 
calculate log likelihood 
convergence.check is 0.0001869996 
Completing Iteration 3 (approx. per word bound = -21.651, relative change = 1.870e-04) 
.....................................................................................................
Completed E-Step (26 seconds). 
..........................................................................................Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
....Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
20 
debug: (while) is.null(mod)
..Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
20 
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)

Completed M-Step (351 seconds). 
calculate log likelihood 
convergence.check is 9.7088e-05 
Completing Iteration 4 (approx. per word bound = -21.649, relative change = 9.709e-05) 
.....................................................................................................
Completed E-Step (10 seconds). 
..........................................................................................Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
....Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
..Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)

Completed M-Step (257 seconds). 
calculate log likelihood 
convergence.check is 3.314631e-05 
Completing Iteration 5 (approx. per word bound = -21.648, relative change = 3.315e-05) 
Topic 1: Gene1321, Gene1905, Gene1135, Gene817, Gene2073 
 Topic 2: Gene939, Gene2494, Gene2567, Gene1711, Gene290 
 Topic 3: Gene333, Gene297, Gene2944, Gene2623, Gene1993 
 Topic 4: Gene913, Gene156, Gene2227, Gene191, Gene196 
 Topic 5: Gene885, Gene765, Gene2469, Gene2871, Gene706 
 Topic 6: Gene1667, Gene614, Gene530, Gene2405, Gene546 
 Topic 7: Gene2863, Gene1463, Gene1823, Gene2524, Gene1194 
 Topic 8: Gene2567, Gene1844, Gene939, Gene1204, Gene465 
Aspect 1: Gene2239, Gene1743, Gene1077, Gene1296, Gene111 
 Aspect 2: Gene2043, Gene1489, Gene706, Gene2405, Gene1251 
 Aspect 3: Gene1019, Gene2483, Gene1315, Gene588, Gene81 
 Aspect 4: Gene81, Gene1315, Gene88, Gene1640, Gene1610 
 Aspect 5: Gene2733, Gene1215, Gene2442, Gene508, Gene796 
 Aspect 6: Gene2693, Gene1301, Gene2941, Gene2300, Gene1780 
 Aspect 7: Gene214, Gene745, Gene1067, Gene1975, Gene2900 
 Aspect 8: Gene1444, Gene214, Gene1399, Gene1063, Gene101 
 Aspect 9: Gene57, Gene1709, Gene267, Gene1301, Gene830 
 Aspect 10: Gene1019, Gene2285, Gene2043, Gene107, Gene573 
.....................................................................................................
Completed E-Step (10 seconds). 
..........................................................................................Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
....Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
..Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)

Completed M-Step (259 seconds). 
calculate log likelihood 
convergence.check is 1.611093e-05 
Completing Iteration 6 (approx. per word bound = -21.648, relative change = 1.611e-05) 
.....................................................................................................
Completed E-Step (11 seconds). 
..........................................................................................Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
....Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
..Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)

Completed M-Step (237 seconds). 
calculate log likelihood 
convergence.check is 1.097358e-05 
Completing Iteration 7 (approx. per word bound = -21.648, relative change = 1.097e-05) 
.....................................................................................................
Completed E-Step (11 seconds). 
..........................................................................................Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
....Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
..Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)

Completed M-Step (223 seconds). 
calculate log likelihood 
convergence.check is 9.295503e-06 
Completing Iteration 8 (approx. per word bound = -21.648, relative change = 9.296e-06) 
.....................................................................................................
Completed E-Step (10 seconds). 
..........................................................................................Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
....Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
..Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)

Completed M-Step (213 seconds). 
calculate log likelihood 
convergence.check is 7.748683e-06 
Completing Iteration 9 (approx. per word bound = -21.647, relative change = 7.749e-06) 
.....................................................................................................
Completed E-Step (10 seconds). 
..........................................................................................Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
....Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
..Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)

Completed M-Step (208 seconds). 
calculate log likelihood 
convergence.check is 7.054347e-06 
Completing Iteration 10 (approx. per word bound = -21.647, relative change = 7.054e-06) 
Topic 1: Gene1321, Gene1905, Gene1135, Gene817, Gene2073 
 Topic 2: Gene2494, Gene2078, Gene1711, Gene678, Gene1382 
 Topic 3: Gene333, Gene297, Gene2944, Gene1993, Gene2623 
 Topic 4: Gene913, Gene156, Gene2227, Gene191, Gene196 
 Topic 5: Gene885, Gene765, Gene2469, Gene2871, Gene706 
 Topic 6: Gene1667, Gene614, Gene2405, Gene530, Gene546 
 Topic 7: Gene2863, Gene1463, Gene1823, Gene2524, Gene1194 
 Topic 8: Gene2567, Gene1844, Gene939, Gene1204, Gene465 
Aspect 1: Gene2239, Gene1296, Gene237, Gene1077, Gene111 
 Aspect 2: Gene2043, Gene1489, Gene2405, Gene706, Gene1077 
 Aspect 3: Gene1019, Gene2483, Gene81, Gene588, Gene864 
 Aspect 4: Gene81, Gene1315, Gene2300, Gene2064, Gene1640 
 Aspect 5: Gene2657, Gene1215, Gene2733, Gene2442, Gene508 
 Aspect 6: Gene2300, Gene2693, Gene1301, Gene2941, Gene107 
 Aspect 7: Gene214, Gene745, Gene2198, Gene1975, Gene1067 
 Aspect 8: Gene1444, Gene1851, Gene1063, Gene1399, Gene326 
 Aspect 9: Gene57, Gene1743, Gene864, Gene1067, Gene267 
 Aspect 10: Gene2285, Gene2483, Gene107, Gene573, Gene2043 
.....................................................................................................
Completed E-Step (10 seconds). 
..........................................................................................Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
....Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
..Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)

Completed M-Step (201 seconds). 
calculate log likelihood 
convergence.check is 6.711761e-06 
Completing Iteration 11 (approx. per word bound = -21.647, relative change = 6.712e-06) 
.....................................................................................................
Completed E-Step (10 seconds). 
..........................................................................................Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
....Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
..Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)

Completed M-Step (200 seconds). 
calculate log likelihood 
convergence.check is 6.314515e-06 
Completing Iteration 12 (approx. per word bound = -21.647, relative change = 6.315e-06) 
.....................................................................................................
Completed E-Step (10 seconds). 
..........................................................................................Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
....Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
..Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)

Completed M-Step (252 seconds). 
calculate log likelihood 
convergence.check is 5.443675e-06 
Completing Iteration 13 (approx. per word bound = -21.647, relative change = 5.444e-06) 
.....................................................................................................
Completed E-Step (10 seconds). 
..........................................................................................Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
....Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
..Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)

Completed M-Step (195 seconds). 
calculate log likelihood 
convergence.check is 4.545448e-06 
Completing Iteration 14 (approx. per word bound = -21.647, relative change = 4.545e-06) 
.....................................................................................................
Completed E-Step (10 seconds). 
..........................................................................................Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
....Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
..Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)

Completed M-Step (189 seconds). 
calculate log likelihood 
convergence.check is 4.509301e-06 
Completing Iteration 15 (approx. per word bound = -21.647, relative change = 4.509e-06) 
Topic 1: Gene1905, Gene1321, Gene2073, Gene1135, Gene817 
 Topic 2: Gene2078, Gene2494, Gene1711, Gene234, Gene678 
 Topic 3: Gene333, Gene297, Gene1993, Gene2944, Gene2623 
 Topic 4: Gene913, Gene156, Gene2227, Gene191, Gene196 
 Topic 5: Gene885, Gene765, Gene2469, Gene2871, Gene706 
 Topic 6: Gene1667, Gene614, Gene2405, Gene530, Gene546 
 Topic 7: Gene1463, Gene2863, Gene1823, Gene2524, Gene1194 
 Topic 8: Gene2567, Gene939, Gene1844, Gene1204, Gene465 
Aspect 1: Gene2239, Gene1296, Gene237, Gene2515, Gene1077 
 Aspect 2: Gene1489, Gene2043, Gene706, Gene2405, Gene1251 
 Aspect 3: Gene2483, Gene1019, Gene588, Gene1315, Gene864 
 Aspect 4: Gene81, Gene1315, Gene2657, Gene2300, Gene1667 
 Aspect 5: Gene2657, Gene1215, Gene508, Gene2442, Gene1506 
 Aspect 6: Gene2300, Gene2941, Gene1301, Gene107, Gene2533 
 Aspect 7: Gene745, Gene214, Gene1975, Gene2900, Gene1067 
 Aspect 8: Gene1851, Gene1444, Gene1399, Gene1781, Gene326 
 Aspect 9: Gene57, Gene864, Gene1067, Gene267, Gene1301 
 Aspect 10: Gene107, Gene2285, Gene573, Gene2540, Gene520 
.....................................................................................................
Completed E-Step (10 seconds). 
..........................................................................................Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
....Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
..Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)

Completed M-Step (186 seconds). 
calculate log likelihood 
convergence.check is 3.883425e-06 
Completing Iteration 16 (approx. per word bound = -21.647, relative change = 3.883e-06) 
.....................................................................................................
Completed E-Step (9 seconds). 
..........................................................................................Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
....Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
..Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)

Completed M-Step (187 seconds). 
calculate log likelihood 
convergence.check is 3.61321e-06 
Completing Iteration 17 (approx. per word bound = -21.647, relative change = 3.613e-06) 
.....................................................................................................
Completed E-Step (9 seconds). 
..........................................................................................Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
....Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
..Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)

Completed M-Step (188 seconds). 
calculate log likelihood 
convergence.check is 2.576342e-06 
Completing Iteration 18 (approx. per word bound = -21.647, relative change = 2.576e-06) 
.....................................................................................................
Completed E-Step (9 seconds). 
..........................................................................................Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
....Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
..Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)

Completed M-Step (184 seconds). 
calculate log likelihood 
convergence.check is 2.380188e-06 
Completing Iteration 19 (approx. per word bound = -21.646, relative change = 2.380e-06) 
.....................................................................................................
Completed E-Step (9 seconds). 
..........................................................................................Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
....Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
..Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)

Completed M-Step (183 seconds). 
calculate log likelihood 
convergence.check is 2.437776e-06 
Completing Iteration 20 (approx. per word bound = -21.646, relative change = 2.438e-06) 
Topic 1: Gene1905, Gene1321, Gene2073, Gene817, Gene1135 
 Topic 2: Gene2078, Gene2494, Gene2158, Gene1711, Gene234 
 Topic 3: Gene333, Gene297, Gene1993, Gene2944, Gene2623 
 Topic 4: Gene913, Gene156, Gene2227, Gene191, Gene196 
 Topic 5: Gene885, Gene765, Gene2469, Gene2871, Gene706 
 Topic 6: Gene1667, Gene614, Gene2405, Gene530, Gene546 
 Topic 7: Gene1463, Gene2863, Gene1823, Gene2524, Gene1194 
 Topic 8: Gene2567, Gene939, Gene1844, Gene1204, Gene465 
Aspect 1: Gene2239, Gene1296, Gene1743, Gene1077, Gene237 
 Aspect 2: Gene1489, Gene2043, Gene706, Gene1251, Gene1283 
 Aspect 3: Gene2483, Gene588, Gene2067, Gene2417, Gene1315 
 Aspect 4: Gene81, Gene1315, Gene2657, Gene2300, Gene2070 
 Aspect 5: Gene2657, Gene1215, Gene508, Gene2442, Gene1721 
 Aspect 6: Gene2300, Gene2941, Gene1301, Gene2533, Gene107 
 Aspect 7: Gene745, Gene214, Gene1975, Gene2900, Gene1067 
 Aspect 8: Gene1444, Gene1851, Gene1399, Gene1781, Gene326 
 Aspect 9: Gene57, Gene1067, Gene267, Gene1301, Gene864 
 Aspect 10: Gene107, Gene573, Gene2285, Gene637, Gene2540 
.....................................................................................................
Completed E-Step (9 seconds). 
..........................................................................................Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
....Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
..Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)

Completed M-Step (182 seconds). 
calculate log likelihood 
convergence.check is 1.997734e-06 
Completing Iteration 21 (approx. per word bound = -21.646, relative change = 1.998e-06) 
.....................................................................................................
Completed E-Step (9 seconds). 
..........................................................................................Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
....Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
..Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)

Completed M-Step (178 seconds). 
calculate log likelihood 
convergence.check is 2.316205e-06 
Completing Iteration 22 (approx. per word bound = -21.646, relative change = 2.316e-06) 
.....................................................................................................
Completed E-Step (8 seconds). 
..........................................................................................Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
....Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
..Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)

Completed M-Step (175 seconds). 
calculate log likelihood 
convergence.check is 1.713037e-06 
Completing Iteration 23 (approx. per word bound = -21.646, relative change = 1.713e-06) 
.....................................................................................................
Completed E-Step (8 seconds). 
..........................................................................................Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
....Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
..Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)

Completed M-Step (173 seconds). 
calculate log likelihood 
convergence.check is 1.790536e-06 
Completing Iteration 24 (approx. per word bound = -21.646, relative change = 1.791e-06) 
.....................................................................................................
Completed E-Step (9 seconds). 
..........................................................................................Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
....Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
..Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: cat(ct, "\n")
10 
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
.Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: browser()
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)

Completed M-Step (165 seconds). 
calculate log likelihood 
convergence.check is 9.515211e-07 
Model Converged 
3 select model run 
Initialization with topicScore. 
Initializing factors using Topic SCORE algorithm.
Initializing loadings by running 10 SCD updates.
.....................................................................................................
Completed E-Step (30 seconds). 
.....................................................................................................
Completed M-Step (134 seconds). 
calculate log likelihood 
Completing Iteration 1 (approx. per word bound = -21.669) 
.....................................................................................................
Completed E-Step (20 seconds). 
.....................................................................................................
Completed M-Step (267 seconds). 
calculate log likelihood 
convergence.check is 0.0005695543 
Completing Iteration 2 (approx. per word bound = -21.657, relative change = 5.696e-04) 
.....................................................................................................
Completed E-Step (28 seconds). 
.....................................................................................................
Completed M-Step (262 seconds). 
calculate log likelihood 
convergence.check is 0.0001701804 
Completing Iteration 3 (approx. per word bound = -21.653, relative change = 1.702e-04) 
.....................................................................................................
Completed E-Step (26 seconds). 
.....................................................................................................
Completed M-Step (140 seconds). 
calculate log likelihood 
convergence.check is 5.181159e-05 
Completing Iteration 4 (approx. per word bound = -21.652, relative change = 5.181e-05) 
.....................................................................................................
Completed E-Step (14 seconds). 
...................................................................................................Called from: mnreg(beta.ss, settings)
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
debug: ct <- ct + 1
debug: mod <- tryCatch(glmnet::glmnet(x = covar, y = counts[[i]], family = "poisson", 
    offset = offset2, standardize = FALSE, intercept = is.null(m), 
    lambda.min.ratio = lambda.min.ratio, nlambda = nlambda, alpha = alpha, 
    maxit = maxit, thresh = thresh), warning = function(w) return(NULL), 
    error = function(e) stop(e))
debug: if (is.null(mod)) {
    browser()
}
debug: if (is.null(mod)) nlambda <- nlambda + floor(0.2 * nlambda)
debug: if (ct%%10 == 0) {
    cat(ct, "\n")
}
debug: (while) is.null(mod)
..
Completed M-Step (119 seconds). 
calculate log likelihood 
convergence.check is 2.405184e-05 
Completing Iteration 5 (approx. per word bound = -21.651, relative change = 2.405e-05) 
Topic 1: Gene2561, Gene1382, Gene2494, Gene1711, Gene234 
 Topic 2: Gene2944, Gene1905, Gene569, Gene297, Gene333 
 Topic 3: Gene913, Gene1923, Gene196, Gene191, Gene177 
 Topic 4: Gene1230, Gene2990, Gene814, Gene2567, Gene2652 
 Topic 5: Gene1463, Gene2863, Gene1823, Gene2524, Gene1194 
 Topic 6: Gene913, Gene156, Gene2227, Gene2737, Gene191 
 Topic 7: Gene1617, Gene1798, Gene958, Gene1923, Gene992 
 Topic 8: Gene2567, Gene394, Gene939, Gene1844, Gene290 
Aspect 1: Gene1475, Gene21, Gene790, Gene1450, Gene2562 
 Aspect 2: Gene2405, Gene21, Gene564, Gene81, Gene520 
 Aspect 3: Gene1667, Gene2483, Gene2026, Gene334, Gene2789 
 Aspect 4: Gene81, Gene2469, Gene2175, Gene1315, Gene530 
 Aspect 5: Gene706, Gene1781, Gene1215, Gene1743, Gene2897 
 Aspect 6: Gene739, Gene2469, Gene563, Gene2871, Gene885 
 Aspect 7: Gene214, Gene745, Gene765, Gene1215, Gene2140 
 Aspect 8: Gene885, Gene2405, Gene1656, Gene1063, Gene1399 
 Aspect 9: Gene57, Gene1475, Gene988, Gene1301, Gene636 
 Aspect 10: Gene1019, Gene569, Gene107, Gene934, Gene1170 
.....................................................................................................
Completed E-Step (14 seconds). 
.....................................................................................................
Completed M-Step (116 seconds). 
calculate log likelihood 
convergence.check is 1.475602e-05 
Completing Iteration 6 (approx. per word bound = -21.651, relative change = 1.476e-05) 
.....................................................................................................
Completed E-Step (13 seconds). 
.....................................................................................................
Completed M-Step (115 seconds). 
calculate log likelihood 
convergence.check is 1.156295e-05 
Completing Iteration 7 (approx. per word bound = -21.651, relative change = 1.156e-05) 
.....................................................................................................
Completed E-Step (13 seconds). 
.....................................................................................................
Completed M-Step (114 seconds). 
calculate log likelihood 
convergence.check is 9.43644e-06 
Completing Iteration 8 (approx. per word bound = -21.651, relative change = 9.436e-06) 
.....................................................................................................
Completed E-Step (13 seconds). 
.....................................................................................................
Completed M-Step (113 seconds). 
calculate log likelihood 
convergence.check is 9.001395e-06 
Completing Iteration 9 (approx. per word bound = -21.650, relative change = 9.001e-06) 
.....................................................................................................
Completed E-Step (13 seconds). 
.....................................................................................................
Completed M-Step (112 seconds). 
calculate log likelihood 
convergence.check is 9.147904e-06 
Completing Iteration 10 (approx. per word bound = -21.650, relative change = 9.148e-06) 
Topic 1: Gene2561, Gene1382, Gene2494, Gene1711, Gene234 
 Topic 2: Gene2944, Gene1905, Gene297, Gene569, Gene333 
 Topic 3: Gene913, Gene196, Gene191, Gene2227, Gene1923 
 Topic 4: Gene1230, Gene2990, Gene2652, Gene814, Gene1862 
 Topic 5: Gene1463, Gene2863, Gene1823, Gene2524, Gene1194 
 Topic 6: Gene913, Gene156, Gene2737, Gene2227, Gene191 
 Topic 7: Gene1617, Gene958, Gene1798, Gene992, Gene1923 
 Topic 8: Gene2567, Gene939, Gene1844, Gene394, Gene465 
Aspect 1: Gene790, Gene1077, Gene21, Gene46, Gene1271 
 Aspect 2: Gene2405, Gene1077, Gene1196, Gene564, Gene1044 
 Aspect 3: Gene2483, Gene546, Gene2026, Gene2417, Gene334 
 Aspect 4: Gene81, Gene546, Gene1315, Gene2469, Gene530 
 Aspect 5: Gene1781, Gene1215, Gene706, Gene1743, Gene1072 
 Aspect 6: Gene563, Gene2469, Gene885, Gene2300, Gene2871 
 Aspect 7: Gene214, Gene745, Gene1215, Gene765, Gene2900 
 Aspect 8: Gene885, Gene812, Gene1610, Gene214, Gene1063 
 Aspect 9: Gene57, Gene1475, Gene988, Gene636, Gene1783 
 Aspect 10: Gene107, Gene934, Gene569, Gene1170, Gene1738 
.....................................................................................................
Completed E-Step (13 seconds). 
.....................................................................................................
Completed M-Step (112 seconds). 
calculate log likelihood 
convergence.check is 8.821562e-06 
Completing Iteration 11 (approx. per word bound = -21.650, relative change = 8.822e-06) 
.....................................................................................................
Completed E-Step (13 seconds). 
.....................................................................................................
Completed M-Step (112 seconds). 
calculate log likelihood 
convergence.check is 8.451654e-06 
Completing Iteration 12 (approx. per word bound = -21.650, relative change = 8.452e-06) 
.....................................................................................................
Completed E-Step (13 seconds). 
.....................................................................................................
Completed M-Step (112 seconds). 
calculate log likelihood 
convergence.check is 8.839944e-06 
Completing Iteration 13 (approx. per word bound = -21.650, relative change = 8.840e-06) 
.....................................................................................................
Completed E-Step (13 seconds). 
.....................................................................................................
Completed M-Step (112 seconds). 
calculate log likelihood 
convergence.check is 8.084618e-06 
Completing Iteration 14 (approx. per word bound = -21.649, relative change = 8.085e-06) 
.....................................................................................................
Completed E-Step (13 seconds). 
.....................................................................................................
Completed M-Step (111 seconds). 
calculate log likelihood 
convergence.check is 8.236123e-06 
Completing Iteration 15 (approx. per word bound = -21.649, relative change = 8.236e-06) 
Topic 1: Gene2561, Gene1382, Gene2494, Gene234, Gene1711 
 Topic 2: Gene2944, Gene297, Gene569, Gene333, Gene358 
 Topic 3: Gene913, Gene191, Gene2227, Gene196, Gene177 
 Topic 4: Gene2990, Gene1230, Gene2652, Gene814, Gene1862 
 Topic 5: Gene1463, Gene2863, Gene1823, Gene2524, Gene648 
 Topic 6: Gene913, Gene1905, Gene885, Gene156, Gene1321 
 Topic 7: Gene1617, Gene958, Gene1798, Gene992, Gene1223 
 Topic 8: Gene2567, Gene939, Gene1844, Gene465, Gene115 
Aspect 1: Gene790, Gene1077, Gene1743, Gene111, Gene1271 
 Aspect 2: Gene2405, Gene1077, Gene1196, Gene2871, Gene1489 
 Aspect 3: Gene2483, Gene546, Gene2417, Gene2026, Gene2789 
 Aspect 4: Gene81, Gene546, Gene1315, Gene2469, Gene1677 
 Aspect 5: Gene1215, Gene706, Gene1781, Gene2733, Gene2897 
 Aspect 6: Gene563, Gene885, Gene2469, Gene2871, Gene2300 
 Aspect 7: Gene745, Gene214, Gene2900, Gene765, Gene1215 
 Aspect 8: Gene214, Gene885, Gene1610, Gene1063, Gene101 
 Aspect 9: Gene57, Gene636, Gene830, Gene267, Gene1301 
 Aspect 10: Gene107, Gene934, Gene1170, Gene569, Gene257 
.....................................................................................................
Completed E-Step (13 seconds). 
.....................................................................................................
Completed M-Step (111 seconds). 
calculate log likelihood 
convergence.check is 8.481025e-06 
Completing Iteration 16 (approx. per word bound = -21.649, relative change = 8.481e-06) 
.....................................................................................................
Completed E-Step (13 seconds). 
.....................................................................................................
Completed M-Step (112 seconds). 
calculate log likelihood 
convergence.check is 8.106257e-06 
Completing Iteration 17 (approx. per word bound = -21.649, relative change = 8.106e-06) 
.....................................................................................................
Completed E-Step (13 seconds). 
.....................................................................................................
Completed M-Step (112 seconds). 
calculate log likelihood 
convergence.check is 7.976429e-06 
Completing Iteration 18 (approx. per word bound = -21.649, relative change = 7.976e-06) 
.....................................................................................................
Completed E-Step (13 seconds). 
.....................................................................................................
Completed M-Step (111 seconds). 
calculate log likelihood 
convergence.check is 7.479758e-06 
Completing Iteration 19 (approx. per word bound = -21.649, relative change = 7.480e-06) 
.....................................................................................................
Completed E-Step (14 seconds). 
.....................................................................................................
Completed M-Step (113 seconds). 
calculate log likelihood 
convergence.check is 7.230888e-06 
Completing Iteration 20 (approx. per word bound = -21.648, relative change = 7.231e-06) 
Topic 1: Gene2561, Gene1382, Gene2494, Gene2198, Gene1711 
 Topic 2: Gene2944, Gene297, Gene333, Gene1993, Gene1375 
 Topic 3: Gene913, Gene191, Gene2227, Gene196, Gene2953 
 Topic 4: Gene2990, Gene1230, Gene2652, Gene710, Gene1773 
 Topic 5: Gene1463, Gene2863, Gene1823, Gene648, Gene2524 
 Topic 6: Gene1905, Gene1321, Gene885, Gene817, Gene928 
 Topic 7: Gene1617, Gene958, Gene1798, Gene1223, Gene992 
 Topic 8: Gene2567, Gene939, Gene1844, Gene368, Gene115 
Aspect 1: Gene790, Gene1077, Gene111, Gene237, Gene2897 
 Aspect 2: Gene2405, Gene1077, Gene2871, Gene1196, Gene1489 
 Aspect 3: Gene2483, Gene546, Gene2417, Gene812, Gene2789 
 Aspect 4: Gene81, Gene546, Gene1315, Gene885, Gene2429 
 Aspect 5: Gene706, Gene1215, Gene1781, Gene2733, Gene2897 
 Aspect 6: Gene563, Gene2469, Gene2871, Gene885, Gene1042 
 Aspect 7: Gene745, Gene214, Gene2900, Gene1067, Gene1286 
 Aspect 8: Gene214, Gene1610, Gene1063, Gene1399, Gene101 
 Aspect 9: Gene1475, Gene830, Gene864, Gene1301, Gene636 
 Aspect 10: Gene569, Gene934, Gene1170, Gene520, Gene257 
.....................................................................................................
Completed E-Step (14 seconds). 
.....................................................................................................
Completed M-Step (119 seconds). 
calculate log likelihood 
convergence.check is 7.172971e-06 
Completing Iteration 21 (approx. per word bound = -21.648, relative change = 7.173e-06) 
.....................................................................................................
Completed E-Step (14 seconds). 
.....................................................................................................
Completed M-Step (120 seconds). 
calculate log likelihood 
convergence.check is 7.009166e-06 
Completing Iteration 22 (approx. per word bound = -21.648, relative change = 7.009e-06) 
.....................................................................................................
Completed E-Step (16 seconds). 
.....................................................................................................
Completed M-Step (126 seconds). 
calculate log likelihood 
convergence.check is 6.756936e-06 
Completing Iteration 23 (approx. per word bound = -21.648, relative change = 6.757e-06) 
.....................................................................................................
Completed E-Step (18 seconds). 
.....................................................................................................
Completed M-Step (125 seconds). 
calculate log likelihood 
convergence.check is 6.798015e-06 
Completing Iteration 24 (approx. per word bound = -21.648, relative change = 6.798e-06) 
.....................................................................................................
Completed E-Step (16 seconds). 
.....................................................................................................
Completed M-Step (126 seconds). 
calculate log likelihood 
convergence.check is 6.559381e-06 
Completing Iteration 25 (approx. per word bound = -21.648, relative change = 6.559e-06) 
Topic 1: Gene2561, Gene1382, Gene2494, Gene678, Gene1711 
 Topic 2: Gene2944, Gene333, Gene297, Gene1993, Gene1375 
 Topic 3: Gene913, Gene2227, Gene191, Gene196, Gene156 
 Topic 4: Gene2990, Gene1230, Gene2652, Gene710, Gene1773 
 Topic 5: Gene1463, Gene2863, Gene1823, Gene648, Gene1233 
 Topic 6: Gene1905, Gene1321, Gene817, Gene1135, Gene928 
 Topic 7: Gene1617, Gene1798, Gene958, Gene2382, Gene1223 
 Topic 8: Gene2567, Gene939, Gene1844, Gene368, Gene2916 
Aspect 1: Gene790, Gene111, Gene1077, Gene237, Gene1296 
 Aspect 2: Gene1077, Gene1196, Gene1489, Gene13, Gene1251 
 Aspect 3: Gene546, Gene2483, Gene2417, Gene1251, Gene2789 
 Aspect 4: Gene81, Gene546, Gene1450, Gene1315, Gene2429 
 Aspect 5: Gene1215, Gene706, Gene2897, Gene2733, Gene614 
 Aspect 6: Gene2871, Gene2469, Gene563, Gene885, Gene1042 
 Aspect 7: Gene745, Gene2900, Gene1067, Gene1286, Gene765 
 Aspect 8: Gene1610, Gene1063, Gene101, Gene1399, Gene440 
 Aspect 9: Gene1475, Gene864, Gene267, Gene1301, Gene2269 
 Aspect 10: Gene934, Gene1170, Gene520, Gene573, Gene257 
.....................................................................................................
Completed E-Step (15 seconds). 
.....................................................................................................
Completed M-Step (125 seconds). 
calculate log likelihood 
convergence.check is 5.728751e-06 
Completing Iteration 26 (approx. per word bound = -21.648, relative change = 5.729e-06) 
.....................................................................................................
Completed E-Step (15 seconds). 
.....................................................................................................
Completed M-Step (126 seconds). 
calculate log likelihood 
convergence.check is 5.215643e-06 
Completing Iteration 27 (approx. per word bound = -21.647, relative change = 5.216e-06) 
.....................................................................................................
Completed E-Step (15 seconds). 
.....................................................................................................
Completed M-Step (126 seconds). 
calculate log likelihood 
convergence.check is 4.901551e-06 
Completing Iteration 28 (approx. per word bound = -21.647, relative change = 4.902e-06) 
.....................................................................................................
Completed E-Step (14 seconds). 
.....................................................................................................
Completed M-Step (126 seconds). 
calculate log likelihood 
convergence.check is 4.195862e-06 
Completing Iteration 29 (approx. per word bound = -21.647, relative change = 4.196e-06) 
.....................................................................................................
Completed E-Step (14 seconds). 
.....................................................................................................
Completed M-Step (127 seconds). 
calculate log likelihood 
convergence.check is 3.757308e-06 
Completing Iteration 30 (approx. per word bound = -21.647, relative change = 3.757e-06) 
Topic 1: Gene2561, Gene1382, Gene2494, Gene678, Gene1711 
 Topic 2: Gene297, Gene333, Gene2944, Gene1993, Gene1375 
 Topic 3: Gene913, Gene2227, Gene156, Gene191, Gene196 
 Topic 4: Gene2990, Gene1230, Gene2652, Gene710, Gene1773 
 Topic 5: Gene1463, Gene2863, Gene1823, Gene648, Gene1233 
 Topic 6: Gene1905, Gene1321, Gene817, Gene1135, Gene928 
 Topic 7: Gene1617, Gene1798, Gene958, Gene1223, Gene2382 
 Topic 8: Gene2567, Gene1844, Gene939, Gene2916, Gene368 
Aspect 1: Gene790, Gene111, Gene2897, Gene1077, Gene237 
 Aspect 2: Gene2043, Gene1077, Gene1489, Gene687, Gene13 
 Aspect 3: Gene2483, Gene546, Gene2417, Gene1251, Gene569 
 Aspect 4: Gene81, Gene546, Gene1450, Gene1315, Gene1610 
 Aspect 5: Gene1215, Gene2897, Gene706, Gene2733, Gene1781 
 Aspect 6: Gene2871, Gene2469, Gene885, Gene563, Gene1042 
 Aspect 7: Gene745, Gene2900, Gene765, Gene1286, Gene1067 
 Aspect 8: Gene326, Gene1610, Gene1399, Gene101, Gene1063 
 Aspect 9: Gene1475, Gene864, Gene57, Gene2007, Gene2765 
 Aspect 10: Gene934, Gene530, Gene1170, Gene573, Gene107 
.....................................................................................................
Completed E-Step (15 seconds). 
.....................................................................................................
Completed M-Step (127 seconds). 
calculate log likelihood 
convergence.check is 3.836424e-06 
Completing Iteration 31 (approx. per word bound = -21.647, relative change = 3.836e-06) 
.....................................................................................................
Completed E-Step (14 seconds). 
.....................................................................................................
Completed M-Step (127 seconds). 
calculate log likelihood 
convergence.check is 2.994488e-06 
Completing Iteration 32 (approx. per word bound = -21.647, relative change = 2.994e-06) 
.....................................................................................................
Completed E-Step (14 seconds). 
.....................................................................................................
Completed M-Step (127 seconds). 
calculate log likelihood 
convergence.check is 3.153451e-06 
Completing Iteration 33 (approx. per word bound = -21.647, relative change = 3.153e-06) 
.....................................................................................................
Completed E-Step (14 seconds). 
.....................................................................................................
Completed M-Step (127 seconds). 
calculate log likelihood 
convergence.check is 2.628715e-06 
Completing Iteration 34 (approx. per word bound = -21.647, relative change = 2.629e-06) 
.....................................................................................................
Completed E-Step (14 seconds). 
.....................................................................................................
Completed M-Step (128 seconds). 
calculate log likelihood 
convergence.check is 2.113673e-06 
Completing Iteration 35 (approx. per word bound = -21.647, relative change = 2.114e-06) 
Topic 1: Gene2561, Gene1382, Gene2494, Gene678, Gene1711 
 Topic 2: Gene333, Gene297, Gene2944, Gene1993, Gene2623 
 Topic 3: Gene913, Gene2227, Gene156, Gene191, Gene196 
 Topic 4: Gene2990, Gene1230, Gene2652, Gene710, Gene1773 
 Topic 5: Gene1463, Gene2863, Gene1823, Gene648, Gene1233 
 Topic 6: Gene1905, Gene1321, Gene817, Gene1135, Gene2073 
 Topic 7: Gene1617, Gene1798, Gene958, Gene1223, Gene1923 
 Topic 8: Gene2567, Gene1844, Gene939, Gene2916, Gene368 
Aspect 1: Gene2897, Gene111, Gene237, Gene830, Gene499 
 Aspect 2: Gene2043, Gene1489, Gene2198, Gene1251, Gene687 
 Aspect 3: Gene2483, Gene546, Gene2417, Gene1251, Gene2067 
 Aspect 4: Gene546, Gene81, Gene1610, Gene814, Gene2429 
 Aspect 5: Gene1215, Gene2897, Gene2733, Gene1781, Gene706 
 Aspect 6: Gene2871, Gene2469, Gene885, Gene563, Gene1042 
 Aspect 7: Gene745, Gene765, Gene2900, Gene1286, Gene1399 
 Aspect 8: Gene812, Gene885, Gene214, Gene326, Gene21 
 Aspect 9: Gene1475, Gene57, Gene2007, Gene2765, Gene864 
 Aspect 10: Gene934, Gene1170, Gene107, Gene530, Gene520 
.....................................................................................................
Completed E-Step (14 seconds). 
.....................................................................................................
Completed M-Step (128 seconds). 
calculate log likelihood 
convergence.check is 2.040971e-06 
Completing Iteration 36 (approx. per word bound = -21.647, relative change = 2.041e-06) 
.....................................................................................................
Completed E-Step (14 seconds). 
.....................................................................................................
Completed M-Step (128 seconds). 
calculate log likelihood 
convergence.check is 3.023849e-06 
Completing Iteration 37 (approx. per word bound = -21.647, relative change = 3.024e-06) 
.....................................................................................................
Completed E-Step (15 seconds). 
.....................................................................................................
Completed M-Step (129 seconds). 
calculate log likelihood 
convergence.check is 2.074294e-06 
Completing Iteration 38 (approx. per word bound = -21.647, relative change = 2.074e-06) 
.....................................................................................................
Completed E-Step (15 seconds). 
.....................................................................................................
Completed M-Step (129 seconds). 
calculate log likelihood 
convergence.check is 2.494295e-06 
Completing Iteration 39 (approx. per word bound = -21.647, relative change = 2.494e-06) 
.....................................................................................................
Completed E-Step (15 seconds). 
.....................................................................................................
Completed M-Step (129 seconds). 
calculate log likelihood 
convergence.check is 2.242384e-06 
Completing Iteration 40 (approx. per word bound = -21.647, relative change = 2.242e-06) 
Topic 1: Gene2561, Gene1382, Gene2494, Gene678, Gene354 
 Topic 2: Gene333, Gene297, Gene2944, Gene1993, Gene2623 
 Topic 3: Gene913, Gene2227, Gene156, Gene191, Gene196 
 Topic 4: Gene2990, Gene1230, Gene2652, Gene710, Gene1773 
 Topic 5: Gene2863, Gene1463, Gene1823, Gene648, Gene2524 
 Topic 6: Gene1905, Gene1321, Gene817, Gene2073, Gene1135 
 Topic 7: Gene1617, Gene1798, Gene958, Gene1223, Gene1923 
 Topic 8: Gene2567, Gene1844, Gene368, Gene939, Gene2916 
Aspect 1: Gene2897, Gene111, Gene2886, Gene237, Gene1401 
 Aspect 2: Gene2043, Gene2198, Gene1251, Gene1489, Gene687 
 Aspect 3: Gene2483, Gene546, Gene2417, Gene1667, Gene1251 
 Aspect 4: Gene546, Gene81, Gene814, Gene1610, Gene2429 
 Aspect 5: Gene1215, Gene2897, Gene2733, Gene1781, Gene1721 
 Aspect 6: Gene2871, Gene739, Gene885, Gene2469, Gene563 
 Aspect 7: Gene745, Gene765, Gene2900, Gene1399, Gene1286 
 Aspect 8: Gene885, Gene214, Gene812, Gene326, Gene1399 
 Aspect 9: Gene57, Gene1475, Gene2007, Gene2765, Gene864 
 Aspect 10: Gene934, Gene107, Gene1170, Gene520, Gene530 
.....................................................................................................
Completed E-Step (15 seconds). 
.....................................................................................................
Completed M-Step (130 seconds). 
calculate log likelihood 
convergence.check is 2.909638e-06 
Completing Iteration 41 (approx. per word bound = -21.647, relative change = 2.910e-06) 
.....................................................................................................
Completed E-Step (14 seconds). 
.....................................................................................................
Completed M-Step (130 seconds). 
calculate log likelihood 
convergence.check is 2.603795e-06 
Completing Iteration 42 (approx. per word bound = -21.647, relative change = 2.604e-06) 
.....................................................................................................
Completed E-Step (14 seconds). 
.....................................................................................................
Completed M-Step (131 seconds). 
calculate log likelihood 
convergence.check is 2.092021e-06 
Completing Iteration 43 (approx. per word bound = -21.646, relative change = 2.092e-06) 
.....................................................................................................
Completed E-Step (15 seconds). 
.....................................................................................................
Completed M-Step (131 seconds). 
calculate log likelihood 
convergence.check is 2.60342e-06 
Completing Iteration 44 (approx. per word bound = -21.646, relative change = 2.603e-06) 
.....................................................................................................
Completed E-Step (14 seconds). 
.....................................................................................................
Completed M-Step (131 seconds). 
calculate log likelihood 
convergence.check is 2.789942e-06 
Completing Iteration 45 (approx. per word bound = -21.646, relative change = 2.790e-06) 
Topic 1: Gene2561, Gene1382, Gene2494, Gene678, Gene354 
 Topic 2: Gene333, Gene297, Gene2944, Gene1993, Gene2623 
 Topic 3: Gene913, Gene2227, Gene156, Gene191, Gene196 
 Topic 4: Gene2990, Gene1230, Gene2652, Gene1862, Gene710 
 Topic 5: Gene2863, Gene1463, Gene1823, Gene648, Gene2524 
 Topic 6: Gene1905, Gene1321, Gene2073, Gene817, Gene1135 
 Topic 7: Gene1617, Gene1798, Gene958, Gene1923, Gene1223 
 Topic 8: Gene2567, Gene1844, Gene939, Gene368, Gene2916 
Aspect 1: Gene2897, Gene111, Gene2886, Gene1401, Gene237 
 Aspect 2: Gene2043, Gene1489, Gene1251, Gene2198, Gene687 
 Aspect 3: Gene2483, Gene546, Gene739, Gene2417, Gene1667 
 Aspect 4: Gene546, Gene81, Gene814, Gene1610, Gene2429 
 Aspect 5: Gene2733, Gene2897, Gene1215, Gene1721, Gene1781 
 Aspect 6: Gene2871, Gene885, Gene2469, Gene563, Gene1042 
 Aspect 7: Gene745, Gene1975, Gene765, Gene2900, Gene1399 
 Aspect 8: Gene214, Gene812, Gene885, Gene1399, Gene326 
 Aspect 9: Gene57, Gene1475, Gene2007, Gene2765, Gene2723 
 Aspect 10: Gene934, Gene1170, Gene107, Gene520, Gene530 
.....................................................................................................
Completed E-Step (14 seconds). 
.....................................................................................................
Completed M-Step (132 seconds). 
calculate log likelihood 
convergence.check is 2.831063e-06 
Completing Iteration 46 (approx. per word bound = -21.646, relative change = 2.831e-06) 
.....................................................................................................
Completed E-Step (14 seconds). 
.....................................................................................................
Completed M-Step (132 seconds). 
calculate log likelihood 
convergence.check is 3.319868e-06 
Completing Iteration 47 (approx. per word bound = -21.646, relative change = 3.320e-06) 
.....................................................................................................
Completed E-Step (12 seconds). 
.....................................................................................................
Completed M-Step (119 seconds). 
calculate log likelihood 
convergence.check is 3.304099e-06 
Completing Iteration 48 (approx. per word bound = -21.646, relative change = 3.304e-06) 
.....................................................................................................
Completed E-Step (12 seconds). 
.....................................................................................................
Completed M-Step (119 seconds). 
calculate log likelihood 
convergence.check is 3.702465e-06 
Completing Iteration 49 (approx. per word bound = -21.646, relative change = 3.702e-06) 
.....................................................................................................
Completed E-Step (12 seconds). 
.....................................................................................................
Completed M-Step (119 seconds). 
calculate log likelihood 
convergence.check is 4.429708e-06 
Completing Iteration 50 (approx. per word bound = -21.646, relative change = 4.430e-06) 
Topic 1: Gene1382, Gene2561, Gene2494, Gene678, Gene354 
 Topic 2: Gene333, Gene297, Gene2944, Gene1993, Gene2623 
 Topic 3: Gene913, Gene2227, Gene156, Gene191, Gene196 
 Topic 4: Gene2990, Gene1230, Gene2652, Gene1862, Gene710 
 Topic 5: Gene2863, Gene1463, Gene1823, Gene648, Gene2524 
 Topic 6: Gene1905, Gene1321, Gene817, Gene1135, Gene928 
 Topic 7: Gene1617, Gene1798, Gene958, Gene1923, Gene1223 
 Topic 8: Gene2567, Gene939, Gene1844, Gene368, Gene2916 
Aspect 1: Gene790, Gene111, Gene2897, Gene1401, Gene814 
 Aspect 2: Gene2043, Gene2198, Gene1489, Gene1196, Gene687 
 Aspect 3: Gene2483, Gene546, Gene1667, Gene2417, Gene588 
 Aspect 4: Gene81, Gene814, Gene1610, Gene546, Gene2429 
 Aspect 5: Gene2733, Gene1215, Gene2897, Gene2515, Gene1721 
 Aspect 6: Gene2871, Gene885, Gene2469, Gene563, Gene2300 
 Aspect 7: Gene745, Gene1975, Gene765, Gene2900, Gene1399 
 Aspect 8: Gene214, Gene812, Gene1399, Gene326, Gene885 
 Aspect 9: Gene57, Gene1475, Gene2007, Gene2765, Gene2723 
 Aspect 10: Gene934, Gene1170, Gene107, Gene520, Gene530 
.....................................................................................................
Completed E-Step (12 seconds). 
.....................................................................................................
Completed M-Step (120 seconds). 
calculate log likelihood 
convergence.check is 4.419156e-06 
Completing Iteration 51 (approx. per word bound = -21.646, relative change = 4.419e-06) 
.....................................................................................................
Completed E-Step (12 seconds). 
.....................................................................................................
Completed M-Step (120 seconds). 
calculate log likelihood 
convergence.check is 4.448474e-06 
Completing Iteration 52 (approx. per word bound = -21.646, relative change = 4.448e-06) 
.....................................................................................................
Completed E-Step (12 seconds). 
.....................................................................................................
Completed M-Step (121 seconds). 
calculate log likelihood 
convergence.check is 4.351339e-06 
Completing Iteration 53 (approx. per word bound = -21.646, relative change = 4.351e-06) 
.....................................................................................................
Completed E-Step (11 seconds). 
.....................................................................................................
Completed M-Step (120 seconds). 
calculate log likelihood 
convergence.check is 4.066707e-06 
Completing Iteration 54 (approx. per word bound = -21.646, relative change = 4.067e-06) 
.....................................................................................................
Completed E-Step (11 seconds). 
.....................................................................................................
Completed M-Step (120 seconds). 
calculate log likelihood 
convergence.check is 3.771026e-06 
Completing Iteration 55 (approx. per word bound = -21.646, relative change = 3.771e-06) 
Topic 1: Gene1382, Gene2561, Gene678, Gene2494, Gene354 
 Topic 2: Gene333, Gene297, Gene2944, Gene1993, Gene2623 
 Topic 3: Gene913, Gene2227, Gene156, Gene191, Gene196 
 Topic 4: Gene2990, Gene2652, Gene1230, Gene1862, Gene710 
 Topic 5: Gene2863, Gene1463, Gene1823, Gene2524, Gene648 
 Topic 6: Gene1905, Gene1321, Gene817, Gene1135, Gene928 
 Topic 7: Gene1617, Gene1798, Gene958, Gene1923, Gene1223 
 Topic 8: Gene2567, Gene1844, Gene939, Gene2916, Gene1666 
Aspect 1: Gene790, Gene2897, Gene814, Gene111, Gene1401 
 Aspect 2: Gene2043, Gene1196, Gene2198, Gene1489, Gene687 
 Aspect 3: Gene2483, Gene1667, Gene2417, Gene2067, Gene2789 
 Aspect 4: Gene81, Gene814, Gene2064, Gene2429, Gene411 
 Aspect 5: Gene2733, Gene1215, Gene2897, Gene2515, Gene508 
 Aspect 6: Gene2871, Gene2469, Gene885, Gene563, Gene133 
 Aspect 7: Gene1975, Gene745, Gene2900, Gene765, Gene1286 
 Aspect 8: Gene812, Gene1399, Gene326, Gene214, Gene1610 
 Aspect 9: Gene57, Gene1475, Gene2007, Gene864, Gene2765 
 Aspect 10: Gene934, Gene1170, Gene107, Gene2646, Gene520 
.....................................................................................................
Completed E-Step (11 seconds). 
.....................................................................................................
Completed M-Step (120 seconds). 
calculate log likelihood 
convergence.check is 3.421421e-06 
Completing Iteration 56 (approx. per word bound = -21.645, relative change = 3.421e-06) 
.....................................................................................................
Completed E-Step (11 seconds). 
.....................................................................................................
Completed M-Step (121 seconds). 
calculate log likelihood 
convergence.check is 3.372046e-06 
Completing Iteration 57 (approx. per word bound = -21.645, relative change = 3.372e-06) 
.....................................................................................................
Completed E-Step (11 seconds). 
.....................................................................................................
Completed M-Step (121 seconds). 
calculate log likelihood 
convergence.check is 2.684503e-06 
Completing Iteration 58 (approx. per word bound = -21.645, relative change = 2.685e-06) 
.....................................................................................................
Completed E-Step (11 seconds). 
.....................................................................................................
Completed M-Step (121 seconds). 
calculate log likelihood 
convergence.check is 2.841204e-06 
Completing Iteration 59 (approx. per word bound = -21.645, relative change = 2.841e-06) 
.....................................................................................................
Completed E-Step (11 seconds). 
.....................................................................................................
Completed M-Step (121 seconds). 
calculate log likelihood 
convergence.check is 2.305866e-06 
Completing Iteration 60 (approx. per word bound = -21.645, relative change = 2.306e-06) 
Topic 1: Gene1382, Gene678, Gene2561, Gene354, Gene1711 
 Topic 2: Gene333, Gene297, Gene2944, Gene1993, Gene2623 
 Topic 3: Gene913, Gene2227, Gene156, Gene191, Gene196 
 Topic 4: Gene2990, Gene2165, Gene2652, Gene1230, Gene2158 
 Topic 5: Gene2863, Gene1463, Gene1823, Gene2524, Gene648 
 Topic 6: Gene1905, Gene1321, Gene817, Gene1135, Gene928 
 Topic 7: Gene1617, Gene1798, Gene958, Gene1923, Gene1223 
 Topic 8: Gene2567, Gene1844, Gene939, Gene2916, Gene1666 
Aspect 1: Gene790, Gene814, Gene111, Gene2897, Gene246 
 Aspect 2: Gene2198, Gene1196, Gene1489, Gene2043, Gene687 
 Aspect 3: Gene1667, Gene2483, Gene2417, Gene2067, Gene2789 
 Aspect 4: Gene81, Gene814, Gene2064, Gene2657, Gene1640 
 Aspect 5: Gene2643, Gene1215, Gene2897, Gene2515, Gene2733 
 Aspect 6: Gene2871, Gene885, Gene2469, Gene563, Gene133 
 Aspect 7: Gene1975, Gene745, Gene2900, Gene1399, Gene1286 
 Aspect 8: Gene812, Gene1399, Gene1610, Gene326, Gene885 
 Aspect 9: Gene57, Gene1475, Gene2007, Gene864, Gene2765 
 Aspect 10: Gene2483, Gene934, Gene1170, Gene107, Gene2635 
.....................................................................................................
Completed E-Step (10 seconds). 
.....................................................................................................
Completed M-Step (121 seconds). 
calculate log likelihood 
convergence.check is 2.157771e-06 
Completing Iteration 61 (approx. per word bound = -21.645, relative change = 2.158e-06) 
.....................................................................................................
Completed E-Step (10 seconds). 
.....................................................................................................
Completed M-Step (121 seconds). 
calculate log likelihood 
convergence.check is 1.994266e-06 
Completing Iteration 62 (approx. per word bound = -21.645, relative change = 1.994e-06) 
.....................................................................................................
Completed E-Step (10 seconds). 
.....................................................................................................
Completed M-Step (122 seconds). 
calculate log likelihood 
convergence.check is 1.936686e-06 
Completing Iteration 63 (approx. per word bound = -21.645, relative change = 1.937e-06) 
.....................................................................................................
Completed E-Step (10 seconds). 
.....................................................................................................
Completed M-Step (122 seconds). 
calculate log likelihood 
convergence.check is 1.506259e-06 
Completing Iteration 64 (approx. per word bound = -21.645, relative change = 1.506e-06) 
.....................................................................................................
Completed E-Step (10 seconds). 
.....................................................................................................
Completed M-Step (122 seconds). 
calculate log likelihood 
convergence.check is 1.80516e-06 
Completing Iteration 65 (approx. per word bound = -21.645, relative change = 1.805e-06) 
Topic 1: Gene1382, Gene1743, Gene354, Gene1711, Gene678 
 Topic 2: Gene333, Gene297, Gene2944, Gene1993, Gene2623 
 Topic 3: Gene913, Gene2227, Gene156, Gene191, Gene196 
 Topic 4: Gene2165, Gene2990, Gene2987, Gene2158, Gene1230 
 Topic 5: Gene2863, Gene1463, Gene1823, Gene2524, Gene648 
 Topic 6: Gene1905, Gene1321, Gene817, Gene1135, Gene928 
 Topic 7: Gene1617, Gene1798, Gene958, Gene1923, Gene1223 
 Topic 8: Gene2567, Gene1844, Gene939, Gene2916, Gene1666 
Aspect 1: Gene790, Gene246, Gene111, Gene814, Gene2897 
 Aspect 2: Gene2198, Gene1196, Gene1489, Gene1283, Gene13 
 Aspect 3: Gene1667, Gene2483, Gene2417, Gene546, Gene2067 
 Aspect 4: Gene81, Gene814, Gene1450, Gene2064, Gene2657 
 Aspect 5: Gene2643, Gene1215, Gene2897, Gene2515, Gene508 
 Aspect 6: Gene2871, Gene885, Gene2469, Gene563, Gene133 
 Aspect 7: Gene1975, Gene745, Gene2900, Gene1399, Gene1286 
 Aspect 8: Gene812, Gene1399, Gene1610, Gene885, Gene1063 
 Aspect 9: Gene57, Gene1475, Gene2007, Gene864, Gene614 
 Aspect 10: Gene2483, Gene934, Gene1170, Gene107, Gene2635 
.....................................................................................................
Completed E-Step (10 seconds). 
.....................................................................................................
Completed M-Step (122 seconds). 
calculate log likelihood 
convergence.check is 1.730652e-06 
Completing Iteration 66 (approx. per word bound = -21.645, relative change = 1.731e-06) 
.....................................................................................................
Completed E-Step (9 seconds). 
.....................................................................................................
Completed M-Step (122 seconds). 
calculate log likelihood 
convergence.check is 1.555861e-06 
Completing Iteration 67 (approx. per word bound = -21.645, relative change = 1.556e-06) 
.....................................................................................................
Completed E-Step (10 seconds). 
.....................................................................................................
Completed M-Step (123 seconds). 
calculate log likelihood 
convergence.check is 1.491317e-06 
Completing Iteration 68 (approx. per word bound = -21.645, relative change = 1.491e-06) 
.....................................................................................................
Completed E-Step (9 seconds). 
.....................................................................................................
Completed M-Step (122 seconds). 
calculate log likelihood 
convergence.check is 1.322902e-06 
Completing Iteration 69 (approx. per word bound = -21.645, relative change = 1.323e-06) 
.....................................................................................................
Completed E-Step (9 seconds). 
.....................................................................................................
Completed M-Step (122 seconds). 
calculate log likelihood 
convergence.check is 1.485396e-06 
Completing Iteration 70 (approx. per word bound = -21.645, relative change = 1.485e-06) 
Topic 1: Gene1743, Gene1711, Gene354, Gene1382, Gene234 
 Topic 2: Gene333, Gene297, Gene2944, Gene1993, Gene2623 
 Topic 3: Gene913, Gene156, Gene2227, Gene191, Gene196 
 Topic 4: Gene2165, Gene2987, Gene2158, Gene2990, Gene568 
 Topic 5: Gene2863, Gene1463, Gene1823, Gene2524, Gene1233 
 Topic 6: Gene1905, Gene1321, Gene817, Gene1135, Gene928 
 Topic 7: Gene1617, Gene1798, Gene958, Gene1923, Gene1223 
 Topic 8: Gene2567, Gene939, Gene1844, Gene2916, Gene1204 
Aspect 1: Gene246, Gene2897, Gene1077, Gene814, Gene111 
 Aspect 2: Gene2198, Gene1489, Gene1283, Gene13, Gene1196 
 Aspect 3: Gene546, Gene2483, Gene2417, Gene21, Gene1283 
 Aspect 4: Gene81, Gene1450, Gene2657, Gene814, Gene2064 
 Aspect 5: Gene2643, Gene1215, Gene2897, Gene2515, Gene508 
 Aspect 6: Gene885, Gene2871, Gene2469, Gene2941, Gene133 
 Aspect 7: Gene1975, Gene745, Gene2900, Gene1399, Gene1286 
 Aspect 8: Gene812, Gene1399, Gene885, Gene1610, Gene1063 
 Aspect 9: Gene57, Gene2007, Gene864, Gene1301, Gene267 
 Aspect 10: Gene2483, Gene934, Gene1170, Gene2635, Gene107 
.....................................................................................................
Completed E-Step (9 seconds). 
.....................................................................................................
Completed M-Step (122 seconds). 
calculate log likelihood 
convergence.check is 1.531152e-06 
Completing Iteration 71 (approx. per word bound = -21.645, relative change = 1.531e-06) 
.....................................................................................................
Completed E-Step (9 seconds). 
.....................................................................................................
Completed M-Step (122 seconds). 
calculate log likelihood 
convergence.check is 1.287609e-06 
Completing Iteration 72 (approx. per word bound = -21.645, relative change = 1.288e-06) 
.....................................................................................................
Completed E-Step (9 seconds). 
.....................................................................................................
Completed M-Step (122 seconds). 
calculate log likelihood 
convergence.check is 1.521015e-06 
Completing Iteration 73 (approx. per word bound = -21.645, relative change = 1.521e-06) 
.....................................................................................................
Completed E-Step (9 seconds). 
.....................................................................................................
Completed M-Step (122 seconds). 
calculate log likelihood 
convergence.check is 1.25441e-06 
Completing Iteration 74 (approx. per word bound = -21.645, relative change = 1.254e-06) 
.....................................................................................................
Completed E-Step (9 seconds). 
.....................................................................................................
Completed M-Step (122 seconds). 
calculate log likelihood 
convergence.check is 1.579758e-06 
Completing Iteration 75 (approx. per word bound = -21.645, relative change = 1.580e-06) 
Topic 1: Gene1743, Gene1711, Gene354, Gene234, Gene1382 
 Topic 2: Gene333, Gene297, Gene2944, Gene1993, Gene2623 
 Topic 3: Gene913, Gene156, Gene2227, Gene191, Gene196 
 Topic 4: Gene2165, Gene2987, Gene2158, Gene2990, Gene568 
 Topic 5: Gene2863, Gene1463, Gene1823, Gene2524, Gene1233 
 Topic 6: Gene1905, Gene1321, Gene817, Gene1135, Gene2259 
 Topic 7: Gene1617, Gene1798, Gene958, Gene1923, Gene1223 
 Topic 8: Gene2567, Gene939, Gene1844, Gene2916, Gene1666 
Aspect 1: Gene111, Gene2897, Gene1077, Gene1296, Gene814 
 Aspect 2: Gene2198, Gene1489, Gene13, Gene687, Gene2543 
 Aspect 3: Gene546, Gene2483, Gene2417, Gene1283, Gene588 
 Aspect 4: Gene81, Gene1450, Gene814, Gene2064, Gene411 
 Aspect 5: Gene2643, Gene1215, Gene2897, Gene508, Gene2515 
 Aspect 6: Gene885, Gene2871, Gene2469, Gene2941, Gene133 
 Aspect 7: Gene1975, Gene745, Gene2900, Gene1286, Gene1399 
 Aspect 8: Gene812, Gene1399, Gene885, Gene1610, Gene1063 
 Aspect 9: Gene57, Gene2007, Gene864, Gene1301, Gene409 
 Aspect 10: Gene2483, Gene934, Gene1170, Gene2635, Gene107 
.....................................................................................................
Completed E-Step (9 seconds). 
.....................................................................................................
Completed M-Step (123 seconds). 
calculate log likelihood 
convergence.check is 1.453878e-06 
Completing Iteration 76 (approx. per word bound = -21.645, relative change = 1.454e-06) 
.....................................................................................................
Completed E-Step (9 seconds). 
.....................................................................................................
Completed M-Step (123 seconds). 
calculate log likelihood 
convergence.check is 1.366376e-06 
Completing Iteration 77 (approx. per word bound = -21.645, relative change = 1.366e-06) 
.....................................................................................................
Completed E-Step (9 seconds). 
.....................................................................................................
Completed M-Step (123 seconds). 
calculate log likelihood 
convergence.check is 1.608722e-06 
Completing Iteration 78 (approx. per word bound = -21.645, relative change = 1.609e-06) 
.....................................................................................................
Completed E-Step (9 seconds). 
.....................................................................................................
Completed M-Step (123 seconds). 
calculate log likelihood 
convergence.check is 1.417077e-06 
Completing Iteration 79 (approx. per word bound = -21.645, relative change = 1.417e-06) 
.....................................................................................................
Completed E-Step (9 seconds). 
.....................................................................................................
Completed M-Step (123 seconds). 
calculate log likelihood 
convergence.check is 1.473258e-06 
Completing Iteration 80 (approx. per word bound = -21.645, relative change = 1.473e-06) 
Topic 1: Gene1711, Gene1743, Gene234, Gene354, Gene1382 
 Topic 2: Gene333, Gene297, Gene2944, Gene1993, Gene2623 
 Topic 3: Gene913, Gene156, Gene2227, Gene191, Gene196 
 Topic 4: Gene2165, Gene2158, Gene2987, Gene568, Gene2990 
 Topic 5: Gene2863, Gene1463, Gene1823, Gene2524, Gene1233 
 Topic 6: Gene1905, Gene1321, Gene1135, Gene817, Gene2868 
 Topic 7: Gene1617, Gene1798, Gene958, Gene1923, Gene1223 
 Topic 8: Gene2567, Gene939, Gene1844, Gene2916, Gene1893 
Aspect 1: Gene111, Gene1296, Gene814, Gene1077, Gene2897 
 Aspect 2: Gene2198, Gene1489, Gene13, Gene687, Gene2543 
 Aspect 3: Gene2483, Gene2417, Gene1283, Gene21, Gene588 
 Aspect 4: Gene81, Gene814, Gene2064, Gene411, Gene1610 
 Aspect 5: Gene2643, Gene1215, Gene2897, Gene508, Gene706 
 Aspect 6: Gene885, Gene2871, Gene2469, Gene133, Gene2941 
 Aspect 7: Gene1975, Gene745, Gene2900, Gene1286, Gene1399 
 Aspect 8: Gene1399, Gene812, Gene885, Gene1610, Gene1063 
 Aspect 9: Gene57, Gene2007, Gene864, Gene409, Gene1301 
 Aspect 10: Gene2483, Gene934, Gene1170, Gene107, Gene2635 
.....................................................................................................
Completed E-Step (9 seconds). 
.....................................................................................................
Completed M-Step (123 seconds). 
calculate log likelihood 
convergence.check is 1.669439e-06 
Completing Iteration 81 (approx. per word bound = -21.644, relative change = 1.669e-06) 
.....................................................................................................
Completed E-Step (9 seconds). 
.....................................................................................................
Completed M-Step (124 seconds). 
calculate log likelihood 
convergence.check is 1.664086e-06 
Completing Iteration 82 (approx. per word bound = -21.644, relative change = 1.664e-06) 
.....................................................................................................
Completed E-Step (9 seconds). 
.....................................................................................................
Completed M-Step (123 seconds). 
calculate log likelihood 
convergence.check is 1.698658e-06 
Completing Iteration 83 (approx. per word bound = -21.644, relative change = 1.699e-06) 
.....................................................................................................
Completed E-Step (9 seconds). 
.....................................................................................................
Completed M-Step (123 seconds). 
calculate log likelihood 
convergence.check is 1.69831e-06 
Completing Iteration 84 (approx. per word bound = -21.644, relative change = 1.698e-06) 
.....................................................................................................
Completed E-Step (9 seconds). 
.....................................................................................................
Completed M-Step (123 seconds). 
calculate log likelihood 
convergence.check is 1.882381e-06 
Completing Iteration 85 (approx. per word bound = -21.644, relative change = 1.882e-06) 
Topic 1: Gene1711, Gene234, Gene1743, Gene354, Gene2078 
 Topic 2: Gene333, Gene297, Gene2944, Gene1993, Gene2623 
 Topic 3: Gene913, Gene156, Gene2227, Gene191, Gene196 
 Topic 4: Gene2165, Gene2158, Gene2987, Gene568, Gene2990 
 Topic 5: Gene2863, Gene1463, Gene1823, Gene2524, Gene1233 
 Topic 6: Gene1905, Gene1321, Gene1135, Gene817, Gene2868 
 Topic 7: Gene1798, Gene1617, Gene958, Gene1923, Gene1223 
 Topic 8: Gene2567, Gene939, Gene1844, Gene1893, Gene2916 
Aspect 1: Gene111, Gene1296, Gene814, Gene1077, Gene2897 
 Aspect 2: Gene2198, Gene1489, Gene13, Gene687, Gene2543 
 Aspect 3: Gene2483, Gene2417, Gene588, Gene21, Gene2789 
 Aspect 4: Gene81, Gene814, Gene411, Gene2064, Gene1610 
 Aspect 5: Gene2643, Gene1215, Gene2897, Gene508, Gene706 
 Aspect 6: Gene885, Gene2871, Gene2469, Gene133, Gene1301 
 Aspect 7: Gene1975, Gene745, Gene1286, Gene2900, Gene1399 
 Aspect 8: Gene1399, Gene885, Gene812, Gene1610, Gene1063 
 Aspect 9: Gene57, Gene2007, Gene864, Gene1301, Gene384 
 Aspect 10: Gene2483, Gene1170, Gene934, Gene107, Gene637 
.....................................................................................................
Completed E-Step (10 seconds). 
.....................................................................................................
Completed M-Step (123 seconds). 
calculate log likelihood 
convergence.check is 1.613387e-06 
Completing Iteration 86 (approx. per word bound = -21.644, relative change = 1.613e-06) 
.....................................................................................................
Completed E-Step (10 seconds). 
.....................................................................................................
Completed M-Step (123 seconds). 
calculate log likelihood 
convergence.check is 2.03219e-06 
Completing Iteration 87 (approx. per word bound = -21.644, relative change = 2.032e-06) 
.....................................................................................................
Completed E-Step (10 seconds). 
.....................................................................................................
Completed M-Step (123 seconds). 
calculate log likelihood 
convergence.check is 2.167132e-06 
Completing Iteration 88 (approx. per word bound = -21.644, relative change = 2.167e-06) 
.....................................................................................................
Completed E-Step (10 seconds). 
.....................................................................................................
Completed M-Step (123 seconds). 
calculate log likelihood 
convergence.check is 2.215805e-06 
Completing Iteration 89 (approx. per word bound = -21.644, relative change = 2.216e-06) 
.....................................................................................................
Completed E-Step (10 seconds). 
.....................................................................................................
Completed M-Step (123 seconds). 
calculate log likelihood 
convergence.check is 1.867487e-06 
Completing Iteration 90 (approx. per word bound = -21.644, relative change = 1.867e-06) 
Topic 1: Gene1711, Gene1743, Gene2078, Gene234, Gene354 
 Topic 2: Gene333, Gene297, Gene2944, Gene1993, Gene2623 
 Topic 3: Gene913, Gene156, Gene2227, Gene191, Gene196 
 Topic 4: Gene2165, Gene2158, Gene2987, Gene568, Gene2445 
 Topic 5: Gene2863, Gene1463, Gene1823, Gene2524, Gene1233 
 Topic 6: Gene1905, Gene1321, Gene1135, Gene817, Gene2868 
 Topic 7: Gene1798, Gene1617, Gene958, Gene1923, Gene1223 
 Topic 8: Gene2567, Gene939, Gene1844, Gene1893, Gene2916 
Aspect 1: Gene111, Gene1296, Gene814, Gene1077, Gene2782 
 Aspect 2: Gene2198, Gene1489, Gene687, Gene13, Gene2543 
 Aspect 3: Gene2483, Gene2417, Gene588, Gene993, Gene2789 
 Aspect 4: Gene81, Gene814, Gene411, Gene1610, Gene719 
 Aspect 5: Gene2643, Gene1215, Gene2897, Gene508, Gene2515 
 Aspect 6: Gene885, Gene2871, Gene2469, Gene1301, Gene2300 
 Aspect 7: Gene1975, Gene745, Gene1286, Gene1399, Gene2900 
 Aspect 8: Gene885, Gene1399, Gene1610, Gene812, Gene1444 
 Aspect 9: Gene57, Gene2007, Gene864, Gene2765, Gene267 
 Aspect 10: Gene2483, Gene1170, Gene934, Gene2635, Gene107 
.....................................................................................................
Completed E-Step (10 seconds). 
.....................................................................................................
Completed M-Step (123 seconds). 
calculate log likelihood 
convergence.check is 2.10584e-06 
Completing Iteration 91 (approx. per word bound = -21.644, relative change = 2.106e-06) 
.....................................................................................................
Completed E-Step (10 seconds). 
.....................................................................................................
Completed M-Step (123 seconds). 
calculate log likelihood 
convergence.check is 2.263594e-06 
Completing Iteration 92 (approx. per word bound = -21.644, relative change = 2.264e-06) 
.....................................................................................................
Completed E-Step (10 seconds). 
.....................................................................................................
Completed M-Step (123 seconds). 
calculate log likelihood 
convergence.check is 2.062151e-06 
Completing Iteration 93 (approx. per word bound = -21.644, relative change = 2.062e-06) 
.....................................................................................................
Completed E-Step (10 seconds). 
.....................................................................................................
Completed M-Step (123 seconds). 
calculate log likelihood 
convergence.check is 1.871189e-06 
Completing Iteration 94 (approx. per word bound = -21.644, relative change = 1.871e-06) 
.....................................................................................................
Completed E-Step (10 seconds). 
.....................................................................................................
Completed M-Step (123 seconds). 
calculate log likelihood 
convergence.check is 1.864524e-06 
Completing Iteration 95 (approx. per word bound = -21.644, relative change = 1.865e-06) 
Topic 1: Gene1743, Gene2078, Gene1711, Gene354, Gene234 
 Topic 2: Gene333, Gene297, Gene2944, Gene1993, Gene2623 
 Topic 3: Gene913, Gene156, Gene2227, Gene191, Gene196 
 Topic 4: Gene2165, Gene2158, Gene2987, Gene568, Gene1831 
 Topic 5: Gene2863, Gene1463, Gene1823, Gene2524, Gene1233 
 Topic 6: Gene1905, Gene1321, Gene1135, Gene817, Gene2868 
 Topic 7: Gene1798, Gene1617, Gene958, Gene1923, Gene1223 
 Topic 8: Gene2567, Gene939, Gene1844, Gene1893, Gene465 
Aspect 1: Gene1296, Gene111, Gene814, Gene1077, Gene1312 
 Aspect 2: Gene2198, Gene1489, Gene687, Gene13, Gene2670 
 Aspect 3: Gene2417, Gene2483, Gene864, Gene588, Gene993 
 Aspect 4: Gene81, Gene411, Gene1610, Gene814, Gene719 
 Aspect 5: Gene2643, Gene1215, Gene2515, Gene508, Gene2528 
 Aspect 6: Gene885, Gene2871, Gene2469, Gene133, Gene864 
 Aspect 7: Gene745, Gene1975, Gene1286, Gene546, Gene1067 
 Aspect 8: Gene885, Gene1399, Gene1610, Gene1444, Gene812 
 Aspect 9: Gene57, Gene864, Gene2007, Gene2765, Gene267 
 Aspect 10: Gene2483, Gene1170, Gene934, Gene2635, Gene107 
.....................................................................................................
Completed E-Step (10 seconds). 
.....................................................................................................
Completed M-Step (125 seconds). 
calculate log likelihood 
convergence.check is 1.846827e-06 
Completing Iteration 96 (approx. per word bound = -21.644, relative change = 1.847e-06) 
.....................................................................................................
Completed E-Step (9 seconds). 
.....................................................................................................
Completed M-Step (124 seconds). 
calculate log likelihood 
convergence.check is 1.816643e-06 
Completing Iteration 97 (approx. per word bound = -21.644, relative change = 1.817e-06) 
.....................................................................................................
Completed E-Step (9 seconds). 
.....................................................................................................
Completed M-Step (124 seconds). 
calculate log likelihood 
convergence.check is 1.640385e-06 
Completing Iteration 98 (approx. per word bound = -21.644, relative change = 1.640e-06) 
.....................................................................................................
Completed E-Step (9 seconds). 
.....................................................................................................
Completed M-Step (123 seconds). 
calculate log likelihood 
convergence.check is 1.257711e-06 
Completing Iteration 99 (approx. per word bound = -21.644, relative change = 1.258e-06) 
.....................................................................................................
Completed E-Step (9 seconds). 
.....................................................................................................
Completed M-Step (123 seconds). 
calculate log likelihood 
convergence.check is 1.313452e-06 
Model Terminated Before Convergence Reached 
4 select model run 
Initialization with topicScore. 
Initializing factors using Topic SCORE algorithm.
Initializing loadings by running 10 SCD updates.
.....................................................................................................
Completed E-Step (35 seconds). 
.....................................................................................................
Completed M-Step (131 seconds). 
calculate log likelihood 
Completing Iteration 1 (approx. per word bound = -21.667) 
.....................................................................................................
Completed E-Step (21 seconds). 
.....................................................................................................
Completed M-Step (126 seconds). 
calculate log likelihood 
convergence.check is 0.0004960795 
Completing Iteration 2 (approx. per word bound = -21.657, relative change = 4.961e-04) 
.....................................................................................................
Completed E-Step (17 seconds). 
.....................................................................................................
Completed M-Step (122 seconds). 
calculate log likelihood 
convergence.check is 0.0001460539 
Completing Iteration 3 (approx. per word bound = -21.653, relative change = 1.461e-04) 
.....................................................................................................
Completed E-Step (17 seconds). 
.....................................................................................................
Completed M-Step (119 seconds). 
calculate log likelihood 
convergence.check is 5.440552e-05 
Completing Iteration 4 (approx. per word bound = -21.652, relative change = 5.441e-05) 
.....................................................................................................
Completed E-Step (17 seconds). 
.....................................................................................................
Completed M-Step (117 seconds). 
calculate log likelihood 
convergence.check is 2.897408e-05 
Completing Iteration 5 (approx. per word bound = -21.652, relative change = 2.897e-05) 
Topic 1: Gene2944, Gene297, Gene333, Gene1993, Gene1905 
 Topic 2: Gene2494, Gene678, Gene1711, Gene234, Gene2078 
 Topic 3: Gene913, Gene2227, Gene191, Gene1923, Gene156 
 Topic 4: Gene913, Gene156, Gene2737, Gene2227, Gene191 
 Topic 5: Gene2567, Gene1844, Gene939, Gene1204, Gene465 
 Topic 6: Gene1463, Gene2863, Gene1823, Gene2524, Gene1194 
 Topic 7: Gene700, Gene992, Gene1923, Gene2382, Gene1223 
 Topic 8: Gene482, Gene394, Gene290, Gene115, Gene1798 
Aspect 1: Gene46, Gene1440, Gene1296, Gene1975, Gene1271 
 Aspect 2: Gene2405, Gene1489, Gene81, Gene520, Gene1195 
 Aspect 3: Gene1019, Gene81, Gene765, Gene2789, Gene2483 
 Aspect 4: Gene81, Gene546, Gene614, Gene1677, Gene2064 
 Aspect 5: Gene706, Gene1215, Gene2897, Gene1914, Gene508 
 Aspect 6: Gene885, Gene2871, Gene2469, Gene2300, Gene1215 
 Aspect 7: Gene214, Gene745, Gene765, Gene1253, Gene2900 
 Aspect 8: Gene885, Gene2405, Gene1444, Gene101, Gene1656 
 Aspect 9: Gene57, Gene1475, Gene988, Gene214, Gene2007 
 Aspect 10: Gene1019, Gene107, Gene573, Gene986, Gene934 
.....................................................................................................
Completed E-Step (16 seconds). 
.....................................................................................................
Completed M-Step (115 seconds). 
calculate log likelihood 
convergence.check is 1.767952e-05 
Completing Iteration 6 (approx. per word bound = -21.651, relative change = 1.768e-05) 
.....................................................................................................
Completed E-Step (15 seconds). 
.....................................................................................................
Completed M-Step (114 seconds). 
calculate log likelihood 
convergence.check is 1.135288e-05 
Completing Iteration 7 (approx. per word bound = -21.651, relative change = 1.135e-05) 
.....................................................................................................
Completed E-Step (16 seconds). 
.....................................................................................................
Completed M-Step (113 seconds). 
calculate log likelihood 
convergence.check is 9.105309e-06 
Completing Iteration 8 (approx. per word bound = -21.651, relative change = 9.105e-06) 
.....................................................................................................
Completed E-Step (16 seconds). 
.....................................................................................................
Completed M-Step (112 seconds). 
calculate log likelihood 
convergence.check is 9.169357e-06 
Completing Iteration 9 (approx. per word bound = -21.651, relative change = 9.169e-06) 
.....................................................................................................
Completed E-Step (15 seconds). 
.....................................................................................................
Completed M-Step (112 seconds). 
calculate log likelihood 
convergence.check is 7.804867e-06 
Completing Iteration 10 (approx. per word bound = -21.650, relative change = 7.805e-06) 
Topic 1: Gene2944, Gene297, Gene333, Gene1375, Gene2623 
 Topic 2: Gene2494, Gene1711, Gene678, Gene234, Gene2078 
 Topic 3: Gene913, Gene2227, Gene191, Gene196, Gene1923 
 Topic 4: Gene156, Gene913, Gene191, Gene2737, Gene196 
 Topic 5: Gene2567, Gene1844, Gene939, Gene1204, Gene290 
 Topic 6: Gene1463, Gene2863, Gene1823, Gene2524, Gene1194 
 Topic 7: Gene992, Gene1923, Gene700, Gene1223, Gene2382 
 Topic 8: Gene482, Gene1798, Gene394, Gene1617, Gene115 
Aspect 1: Gene1709, Gene790, Gene1475, Gene1975, Gene46 
 Aspect 2: Gene1196, Gene1489, Gene564, Gene2868, Gene1044 
 Aspect 3: Gene2483, Gene812, Gene1019, Gene2417, Gene2067 
 Aspect 4: Gene81, Gene614, Gene546, Gene2064, Gene411 
 Aspect 5: Gene1215, Gene706, Gene1781, Gene2897, Gene1072 
 Aspect 6: Gene2469, Gene885, Gene2871, Gene1215, Gene2941 
 Aspect 7: Gene214, Gene745, Gene2900, Gene1475, Gene1253 
 Aspect 8: Gene885, Gene1444, Gene101, Gene440, Gene1656 
 Aspect 9: Gene57, Gene1475, Gene988, Gene2007, Gene1301 
 Aspect 10: Gene107, Gene934, Gene573, Gene1170, Gene520 
.....................................................................................................
Completed E-Step (14 seconds). 
.....................................................................................................
Completed M-Step (110 seconds). 
calculate log likelihood 
convergence.check is 7.358399e-06 
Completing Iteration 11 (approx. per word bound = -21.650, relative change = 7.358e-06) 
.....................................................................................................
Completed E-Step (14 seconds). 
.....................................................................................................
Completed M-Step (110 seconds). 
calculate log likelihood 
convergence.check is 7.65899e-06 
Completing Iteration 12 (approx. per word bound = -21.650, relative change = 7.659e-06) 
.....................................................................................................
Completed E-Step (14 seconds). 
.....................................................................................................
Completed M-Step (110 seconds). 
calculate log likelihood 
convergence.check is 8.569664e-06 
Completing Iteration 13 (approx. per word bound = -21.650, relative change = 8.570e-06) 
.....................................................................................................
Completed E-Step (14 seconds). 
.....................................................................................................
Completed M-Step (110 seconds). 
calculate log likelihood 
convergence.check is 7.992126e-06 
Completing Iteration 14 (approx. per word bound = -21.650, relative change = 7.992e-06) 
.....................................................................................................
Completed E-Step (14 seconds). 
.....................................................................................................
Completed M-Step (110 seconds). 
calculate log likelihood 
convergence.check is 8.616188e-06 
Completing Iteration 15 (approx. per word bound = -21.649, relative change = 8.616e-06) 
Topic 1: Gene297, Gene2944, Gene333, Gene1375, Gene2623 
 Topic 2: Gene2494, Gene1711, Gene678, Gene234, Gene354 
 Topic 3: Gene913, Gene2227, Gene156, Gene191, Gene196 
 Topic 4: Gene1905, Gene1241, Gene913, Gene191, Gene817 
 Topic 5: Gene2567, Gene1844, Gene939, Gene1204, Gene290 
 Topic 6: Gene1463, Gene2863, Gene1823, Gene2524, Gene1194 
 Topic 7: Gene1923, Gene1223, Gene992, Gene700, Gene2382 
 Topic 8: Gene482, Gene1798, Gene394, Gene1617, Gene115 
Aspect 1: Gene1709, Gene790, Gene46, Gene1296, Gene111 
 Aspect 2: Gene1196, Gene2405, Gene2868, Gene520, Gene1044 
 Aspect 3: Gene2483, Gene812, Gene2417, Gene2067, Gene2789 
 Aspect 4: Gene81, Gene546, Gene1677, Gene2064, Gene436 
 Aspect 5: Gene1215, Gene1781, Gene2897, Gene2515, Gene706 
 Aspect 6: Gene2469, Gene885, Gene2300, Gene2941, Gene1042 
 Aspect 7: Gene1475, Gene214, Gene745, Gene2900, Gene1253 
 Aspect 8: Gene885, Gene1444, Gene101, Gene440, Gene1656 
 Aspect 9: Gene57, Gene2007, Gene988, Gene1301, Gene864 
 Aspect 10: Gene107, Gene1170, Gene934, Gene573, Gene520 
.....................................................................................................
Completed E-Step (14 seconds). 
.....................................................................................................
Completed M-Step (110 seconds). 
calculate log likelihood 
convergence.check is 9.328519e-06 
Completing Iteration 16 (approx. per word bound = -21.649, relative change = 9.329e-06) 
.....................................................................................................
Completed E-Step (14 seconds). 
.....................................................................................................
Completed M-Step (110 seconds). 
calculate log likelihood 
convergence.check is 9.474507e-06 
Completing Iteration 17 (approx. per word bound = -21.649, relative change = 9.475e-06) 
.....................................................................................................
Completed E-Step (14 seconds). 
.....................................................................................................
Completed M-Step (109 seconds). 
calculate log likelihood 
convergence.check is 9.850589e-06 
Completing Iteration 18 (approx. per word bound = -21.649, relative change = 9.851e-06) 
.....................................................................................................
Completed E-Step (14 seconds). 
.....................................................................................................
Completed M-Step (109 seconds). 
calculate log likelihood 
convergence.check is 1.044517e-05 
Completing Iteration 19 (approx. per word bound = -21.649, relative change = 1.045e-05) 
.....................................................................................................
Completed E-Step (13 seconds). 
.....................................................................................................
Completed M-Step (110 seconds). 
calculate log likelihood 
convergence.check is 9.87512e-06 
Completing Iteration 20 (approx. per word bound = -21.648, relative change = 9.875e-06) 
Topic 1: Gene297, Gene333, Gene2944, Gene1375, Gene2623 
 Topic 2: Gene2494, Gene1711, Gene678, Gene234, Gene1382 
 Topic 3: Gene913, Gene2227, Gene156, Gene191, Gene196 
 Topic 4: Gene1905, Gene1321, Gene1135, Gene928, Gene2073 
 Topic 5: Gene2567, Gene1844, Gene939, Gene1204, Gene290 
 Topic 6: Gene1463, Gene2863, Gene1823, Gene2524, Gene648 
 Topic 7: Gene1923, Gene1223, Gene700, Gene992, Gene2382 
 Topic 8: Gene482, Gene1798, Gene1666, Gene368, Gene394 
Aspect 1: Gene1709, Gene790, Gene111, Gene2897, Gene1743 
 Aspect 2: Gene2405, Gene1196, Gene520, Gene2043, Gene1489 
 Aspect 3: Gene2483, Gene2417, Gene569, Gene2789, Gene588 
 Aspect 4: Gene81, Gene885, Gene2064, Gene546, Gene436 
 Aspect 5: Gene1215, Gene2897, Gene1743, Gene1781, Gene2515 
 Aspect 6: Gene885, Gene2469, Gene2871, Gene1042, Gene2300 
 Aspect 7: Gene1475, Gene745, Gene2900, Gene765, Gene1067 
 Aspect 8: Gene885, Gene1444, Gene1721, Gene1610, Gene101 
 Aspect 9: Gene57, Gene2007, Gene988, Gene1301, Gene864 
 Aspect 10: Gene107, Gene934, Gene1170, Gene1450, Gene573 
.....................................................................................................
Completed E-Step (13 seconds). 
.....................................................................................................
Completed M-Step (109 seconds). 
calculate log likelihood 
convergence.check is 1.028353e-05 
Completing Iteration 21 (approx. per word bound = -21.648, relative change = 1.028e-05) 
.....................................................................................................
Completed E-Step (12 seconds). 
.....................................................................................................
Completed M-Step (107 seconds). 
calculate log likelihood 
convergence.check is 9.27963e-06 
Completing Iteration 22 (approx. per word bound = -21.648, relative change = 9.280e-06) 
.....................................................................................................
Completed E-Step (11 seconds). 
.....................................................................................................
Completed M-Step (107 seconds). 
calculate log likelihood 
convergence.check is 8.852917e-06 
Completing Iteration 23 (approx. per word bound = -21.648, relative change = 8.853e-06) 
.....................................................................................................
Completed E-Step (11 seconds). 
.....................................................................................................
Completed M-Step (107 seconds). 
calculate log likelihood 
convergence.check is 8.077591e-06 
Completing Iteration 24 (approx. per word bound = -21.648, relative change = 8.078e-06) 
.....................................................................................................
Completed E-Step (11 seconds). 
.....................................................................................................
Completed M-Step (107 seconds). 
calculate log likelihood 
convergence.check is 7.983845e-06 
Completing Iteration 25 (approx. per word bound = -21.647, relative change = 7.984e-06) 
Topic 1: Gene297, Gene333, Gene2944, Gene2623, Gene1993 
 Topic 2: Gene2494, Gene678, Gene1711, Gene2078, Gene1382 
 Topic 3: Gene913, Gene2227, Gene156, Gene191, Gene196 
 Topic 4: Gene1905, Gene1321, Gene2073, Gene1135, Gene817 
 Topic 5: Gene2567, Gene1844, Gene939, Gene1204, Gene290 
 Topic 6: Gene1463, Gene2863, Gene1823, Gene2524, Gene648 
 Topic 7: Gene1223, Gene1923, Gene2382, Gene700, Gene992 
 Topic 8: Gene1666, Gene1798, Gene482, Gene2413, Gene368 
Aspect 1: Gene1709, Gene2897, Gene237, Gene111, Gene1296 
 Aspect 2: Gene2405, Gene520, Gene687, Gene1489, Gene2198 
 Aspect 3: Gene2483, Gene1019, Gene2417, Gene2067, Gene2789 
 Aspect 4: Gene81, Gene2064, Gene436, Gene913, Gene530 
 Aspect 5: Gene1215, Gene2897, Gene1781, Gene2515, Gene2733 
 Aspect 6: Gene885, Gene2871, Gene2469, Gene1042, Gene2897 
 Aspect 7: Gene765, Gene745, Gene546, Gene1067, Gene1399 
 Aspect 8: Gene885, Gene101, Gene1444, Gene1610, Gene1399 
 Aspect 9: Gene57, Gene1475, Gene2007, Gene2765, Gene1067 
 Aspect 10: Gene934, Gene107, Gene1170, Gene520, Gene573 
.....................................................................................................
Completed E-Step (11 seconds). 
.....................................................................................................
Completed M-Step (108 seconds). 
calculate log likelihood 
convergence.check is 7.327516e-06 
Completing Iteration 26 (approx. per word bound = -21.647, relative change = 7.328e-06) 
.....................................................................................................
Completed E-Step (11 seconds). 
.....................................................................................................
Completed M-Step (108 seconds). 
calculate log likelihood 
convergence.check is 6.525973e-06 
Completing Iteration 27 (approx. per word bound = -21.647, relative change = 6.526e-06) 
.....................................................................................................
Completed E-Step (10 seconds). 
.....................................................................................................
Completed M-Step (108 seconds). 
calculate log likelihood 
convergence.check is 5.47977e-06 
Completing Iteration 28 (approx. per word bound = -21.647, relative change = 5.480e-06) 
.....................................................................................................
Completed E-Step (10 seconds). 
.....................................................................................................
Completed M-Step (110 seconds). 
calculate log likelihood 
convergence.check is 4.811368e-06 
Completing Iteration 29 (approx. per word bound = -21.647, relative change = 4.811e-06) 
.....................................................................................................
Completed E-Step (9 seconds). 
.....................................................................................................
Completed M-Step (108 seconds). 
calculate log likelihood 
convergence.check is 3.884128e-06 
Completing Iteration 30 (approx. per word bound = -21.647, relative change = 3.884e-06) 
Topic 1: Gene297, Gene333, Gene2944, Gene2623, Gene1993 
 Topic 2: Gene2494, Gene1711, Gene2078, Gene1382, Gene678 
 Topic 3: Gene913, Gene2227, Gene191, Gene196, Gene156 
 Topic 4: Gene1905, Gene1321, Gene2073, Gene1135, Gene817 
 Topic 5: Gene2567, Gene1844, Gene939, Gene1204, Gene290 
 Topic 6: Gene1463, Gene2863, Gene1823, Gene2524, Gene648 
 Topic 7: Gene1223, Gene2382, Gene992, Gene700, Gene1923 
 Topic 8: Gene1666, Gene1798, Gene2413, Gene368, Gene482 
Aspect 1: Gene1709, Gene790, Gene2897, Gene111, Gene1296 
 Aspect 2: Gene687, Gene1077, Gene520, Gene2198, Gene1489 
 Aspect 3: Gene1019, Gene2483, Gene2417, Gene2067, Gene2789 
 Aspect 4: Gene81, Gene2064, Gene2569, Gene436, Gene1610 
 Aspect 5: Gene1215, Gene2897, Gene1781, Gene2733, Gene2515 
 Aspect 6: Gene2871, Gene885, Gene2469, Gene1042, Gene2300 
 Aspect 7: Gene765, Gene745, Gene546, Gene1067, Gene2900 
 Aspect 8: Gene885, Gene101, Gene812, Gene790, Gene1399 
 Aspect 9: Gene57, Gene1475, Gene2007, Gene2765, Gene2776 
 Aspect 10: Gene934, Gene107, Gene1170, Gene520, Gene2635 
.....................................................................................................
Completed E-Step (9 seconds). 
.....................................................................................................
Completed M-Step (106 seconds). 
calculate log likelihood 
convergence.check is 4.079465e-06 
Completing Iteration 31 (approx. per word bound = -21.647, relative change = 4.079e-06) 
.....................................................................................................
Completed E-Step (9 seconds). 
.....................................................................................................
Completed M-Step (106 seconds). 
calculate log likelihood 
convergence.check is 2.817764e-06 
Completing Iteration 32 (approx. per word bound = -21.647, relative change = 2.818e-06) 
.....................................................................................................
Completed E-Step (9 seconds). 
.....................................................................................................
Completed M-Step (106 seconds). 
calculate log likelihood 
convergence.check is 3.603344e-06 
Completing Iteration 33 (approx. per word bound = -21.647, relative change = 3.603e-06) 
.....................................................................................................
Completed E-Step (16 seconds). 
.....................................................................................................
Completed M-Step (240 seconds). 
calculate log likelihood 
convergence.check is 3.107991e-06 
Completing Iteration 34 (approx. per word bound = -21.647, relative change = 3.108e-06) 
.....................................................................................................
Completed E-Step (23 seconds). 
.....................................................................................................
Completed M-Step (240 seconds). 
calculate log likelihood 
convergence.check is 2.868692e-06 
Completing Iteration 35 (approx. per word bound = -21.647, relative change = 2.869e-06) 
Topic 1: Gene297, Gene333, Gene2944, Gene2623, Gene1993 
 Topic 2: Gene2078, Gene2494, Gene1711, Gene1382, Gene234 
 Topic 3: Gene913, Gene2227, Gene191, Gene156, Gene196 
 Topic 4: Gene1905, Gene1321, Gene2073, Gene1135, Gene817 
 Topic 5: Gene2567, Gene1844, Gene939, Gene1204, Gene1893 
 Topic 6: Gene1463, Gene2863, Gene1823, Gene2524, Gene648 
 Topic 7: Gene1223, Gene992, Gene2382, Gene1923, Gene700 
 Topic 8: Gene1666, Gene1798, Gene2413, Gene368, Gene2916 
Aspect 1: Gene1709, Gene1296, Gene2897, Gene1077, Gene111 
 Aspect 2: Gene2198, Gene687, Gene1077, Gene2405, Gene520 
 Aspect 3: Gene1019, Gene2483, Gene1667, Gene2417, Gene588 
 Aspect 4: Gene81, Gene2064, Gene1610, Gene2569, Gene436 
 Aspect 5: Gene1215, Gene2897, Gene2733, Gene1781, Gene2515 
 Aspect 6: Gene2871, Gene885, Gene739, Gene2469, Gene2300 
 Aspect 7: Gene765, Gene745, Gene546, Gene1067, Gene2900 
 Aspect 8: Gene885, Gene101, Gene790, Gene1399, Gene326 
 Aspect 9: Gene57, Gene1475, Gene2007, Gene2765, Gene864 
 Aspect 10: Gene934, Gene107, Gene1170, Gene2635, Gene761 
.....................................................................................................
Completed E-Step (23 seconds). 
.....................................................................................................
Completed M-Step (243 seconds). 
calculate log likelihood 
convergence.check is 2.979784e-06 
Completing Iteration 36 (approx. per word bound = -21.646, relative change = 2.980e-06) 
.....................................................................................................
Completed E-Step (22 seconds). 
.....................................................................................................
Completed M-Step (246 seconds). 
calculate log likelihood 
convergence.check is 2.290654e-06 
Completing Iteration 37 (approx. per word bound = -21.646, relative change = 2.291e-06) 
.....................................................................................................
Completed E-Step (22 seconds). 
.....................................................................................................
Completed M-Step (247 seconds). 
calculate log likelihood 
convergence.check is 2.587955e-06 
Completing Iteration 38 (approx. per word bound = -21.646, relative change = 2.588e-06) 
.....................................................................................................
Completed E-Step (25 seconds). 
.....................................................................................................
Completed M-Step (206 seconds). 
calculate log likelihood 
convergence.check is 2.801879e-06 
Completing Iteration 39 (approx. per word bound = -21.646, relative change = 2.802e-06) 
.....................................................................................................
Completed E-Step (13 seconds). 
.....................................................................................................
Completed M-Step (136 seconds). 
calculate log likelihood 
convergence.check is 2.501045e-06 
Completing Iteration 40 (approx. per word bound = -21.646, relative change = 2.501e-06) 
Topic 1: Gene333, Gene297, Gene2944, Gene2623, Gene1993 
 Topic 2: Gene2078, Gene2561, Gene1711, Gene234, Gene1382 
 Topic 3: Gene913, Gene2227, Gene156, Gene191, Gene196 
 Topic 4: Gene1905, Gene1321, Gene2073, Gene1135, Gene817 
 Topic 5: Gene2567, Gene1844, Gene939, Gene1204, Gene1893 
 Topic 6: Gene2863, Gene1463, Gene1823, Gene2524, Gene1233 
 Topic 7: Gene1223, Gene992, Gene2382, Gene1923, Gene700 
 Topic 8: Gene1666, Gene648, Gene1798, Gene2413, Gene368 
Aspect 1: Gene1709, Gene1296, Gene1077, Gene111, Gene237 
 Aspect 2: Gene2198, Gene1077, Gene687, Gene142, Gene1489 
 Aspect 3: Gene1019, Gene2483, Gene739, Gene1667, Gene2417 
 Aspect 4: Gene81, Gene2064, Gene1610, Gene436, Gene411 
 Aspect 5: Gene1215, Gene2897, Gene2733, Gene2515, Gene1781 
 Aspect 6: Gene885, Gene2871, Gene2469, Gene2300, Gene107 
 Aspect 7: Gene546, Gene765, Gene745, Gene1067, Gene1286 
 Aspect 8: Gene885, Gene1399, Gene101, Gene1444, Gene326 
 Aspect 9: Gene57, Gene1475, Gene2007, Gene2765, Gene864 
 Aspect 10: Gene934, Gene1170, Gene107, Gene2635, Gene761 
.....................................................................................................
Completed E-Step (13 seconds). 
.....................................................................................................
Completed M-Step (137 seconds). 
calculate log likelihood 
convergence.check is 2.640096e-06 
Completing Iteration 41 (approx. per word bound = -21.646, relative change = 2.640e-06) 
.....................................................................................................
Completed E-Step (13 seconds). 
.....................................................................................................
Completed M-Step (139 seconds). 
calculate log likelihood 
convergence.check is 2.859651e-06 
Completing Iteration 42 (approx. per word bound = -21.646, relative change = 2.860e-06) 
.....................................................................................................
Completed E-Step (13 seconds). 
.....................................................................................................
Completed M-Step (149 seconds). 
calculate log likelihood 
convergence.check is 2.96461e-06 
Completing Iteration 43 (approx. per word bound = -21.646, relative change = 2.965e-06) 
.....................................................................................................
Completed E-Step (16 seconds). 
.....................................................................................................
Completed M-Step (248 seconds). 
calculate log likelihood 
convergence.check is 2.79341e-06 
Completing Iteration 44 (approx. per word bound = -21.646, relative change = 2.793e-06) 
.....................................................................................................
Completed E-Step (28 seconds). 
.....................................................................................................
Completed M-Step (267 seconds). 
calculate log likelihood 
convergence.check is 2.907409e-06 
Completing Iteration 45 (approx. per word bound = -21.646, relative change = 2.907e-06) 
Topic 1: Gene333, Gene297, Gene2944, Gene2623, Gene1993 
 Topic 2: Gene2078, Gene2561, Gene1711, Gene2158, Gene234 
 Topic 3: Gene913, Gene2227, Gene156, Gene191, Gene196 
 Topic 4: Gene1905, Gene1321, Gene1135, Gene817, Gene2073 
 Topic 5: Gene2567, Gene1844, Gene939, Gene1204, Gene1893 
 Topic 6: Gene2863, Gene1463, Gene1823, Gene2524, Gene1233 
 Topic 7: Gene1223, Gene992, Gene2382, Gene1923, Gene700 
 Topic 8: Gene648, Gene1666, Gene1798, Gene2916, Gene2413 
Aspect 1: Gene1709, Gene1077, Gene1296, Gene111, Gene237 
 Aspect 2: Gene2198, Gene1077, Gene687, Gene142, Gene1489 
 Aspect 3: Gene1019, Gene1667, Gene2483, Gene2417, Gene588 
 Aspect 4: Gene81, Gene2064, Gene436, Gene1610, Gene2569 
 Aspect 5: Gene1215, Gene2897, Gene2515, Gene2733, Gene508 
 Aspect 6: Gene885, Gene2871, Gene2469, Gene2300, Gene1301 
 Aspect 7: Gene546, Gene745, Gene765, Gene1067, Gene1975 
 Aspect 8: Gene885, Gene1399, Gene1444, Gene326, Gene101 
 Aspect 9: Gene57, Gene1475, Gene2007, Gene2765, Gene864 
 Aspect 10: Gene934, Gene1170, Gene107, Gene2635, Gene2285 
.....................................................................................................
Completed E-Step (20 seconds). 
.....................................................................................................
Completed M-Step (230 seconds). 
calculate log likelihood 
convergence.check is 3.011768e-06 
Completing Iteration 46 (approx. per word bound = -21.646, relative change = 3.012e-06) 
.....................................................................................................
Completed E-Step (24 seconds). 
.....................................................................................................
Completed M-Step (241 seconds). 
calculate log likelihood 
convergence.check is 3.144067e-06 
Completing Iteration 47 (approx. per word bound = -21.646, relative change = 3.144e-06) 
.....................................................................................................
Completed E-Step (20 seconds). 
.....................................................................................................
Completed M-Step (208 seconds). 
calculate log likelihood 
convergence.check is 3.523276e-06 
Completing Iteration 48 (approx. per word bound = -21.646, relative change = 3.523e-06) 
.....................................................................................................
Completed E-Step (17 seconds). 
.....................................................................................................
Completed M-Step (204 seconds). 
calculate log likelihood 
convergence.check is 2.790989e-06 
Completing Iteration 49 (approx. per word bound = -21.646, relative change = 2.791e-06) 
.....................................................................................................
Completed E-Step (13 seconds). 
.....................................................................................................
Completed M-Step (184 seconds). 
calculate log likelihood 
convergence.check is 2.894424e-06 
Completing Iteration 50 (approx. per word bound = -21.646, relative change = 2.894e-06) 
Topic 1: Gene333, Gene297, Gene2944, Gene2623, Gene1993 
 Topic 2: Gene2078, Gene2158, Gene1711, Gene2165, Gene2561 
 Topic 3: Gene913, Gene2227, Gene156, Gene191, Gene196 
 Topic 4: Gene1905, Gene1321, Gene1135, Gene817, Gene928 
 Topic 5: Gene2567, Gene1844, Gene939, Gene1204, Gene1893 
 Topic 6: Gene2863, Gene1463, Gene1823, Gene2524, Gene1233 
 Topic 7: Gene992, Gene1223, Gene2382, Gene1923, Gene700 
 Topic 8: Gene648, Gene1666, Gene1798, Gene2916, Gene368 
Aspect 1: Gene1709, Gene1296, Gene1077, Gene111, Gene237 
 Aspect 2: Gene2198, Gene1077, Gene1489, Gene687, Gene13 
 Aspect 3: Gene1019, Gene1667, Gene2417, Gene2483, Gene588 
 Aspect 4: Gene81, Gene2064, Gene436, Gene1610, Gene814 
 Aspect 5: Gene1215, Gene2897, Gene2515, Gene2733, Gene508 
 Aspect 6: Gene885, Gene2871, Gene2469, Gene2300, Gene1042 
 Aspect 7: Gene765, Gene745, Gene1975, Gene1399, Gene1067 
 Aspect 8: Gene885, Gene1399, Gene1444, Gene326, Gene1610 
 Aspect 9: Gene57, Gene1475, Gene2007, Gene2765, Gene864 
 Aspect 10: Gene1170, Gene934, Gene107, Gene2285, Gene2635 
.....................................................................................................
Completed E-Step (13 seconds). 
.....................................................................................................
Completed M-Step (199 seconds). 
calculate log likelihood 
convergence.check is 2.813562e-06 
Completing Iteration 51 (approx. per word bound = -21.646, relative change = 2.814e-06) 
.....................................................................................................
Completed E-Step (18 seconds). 
.....................................................................................................
Completed M-Step (209 seconds). 
calculate log likelihood 
convergence.check is 2.625867e-06 
Completing Iteration 52 (approx. per word bound = -21.645, relative change = 2.626e-06) 
.....................................................................................................
Completed E-Step (17 seconds). 
.....................................................................................................
Completed M-Step (208 seconds). 
calculate log likelihood 
convergence.check is 2.936144e-06 
Completing Iteration 53 (approx. per word bound = -21.645, relative change = 2.936e-06) 
.....................................................................................................
Completed E-Step (17 seconds). 
.....................................................................................................
Completed M-Step (209 seconds). 
calculate log likelihood 
convergence.check is 2.46547e-06 
Completing Iteration 54 (approx. per word bound = -21.645, relative change = 2.465e-06) 
.....................................................................................................
Completed E-Step (18 seconds). 
.....................................................................................................
Completed M-Step (209 seconds). 
calculate log likelihood 
convergence.check is 2.129062e-06 
Completing Iteration 55 (approx. per word bound = -21.645, relative change = 2.129e-06) 
Topic 1: Gene333, Gene297, Gene2944, Gene2623, Gene1993 
 Topic 2: Gene2078, Gene2158, Gene2165, Gene1711, Gene249 
 Topic 3: Gene913, Gene2227, Gene156, Gene191, Gene196 
 Topic 4: Gene1905, Gene1321, Gene1135, Gene817, Gene928 
 Topic 5: Gene2567, Gene1844, Gene939, Gene1204, Gene1893 
 Topic 6: Gene2863, Gene1463, Gene1823, Gene2524, Gene1233 
 Topic 7: Gene992, Gene2382, Gene1223, Gene1923, Gene700 
 Topic 8: Gene648, Gene1798, Gene1666, Gene2916, Gene368 
Aspect 1: Gene1709, Gene1077, Gene1296, Gene111, Gene237 
 Aspect 2: Gene2198, Gene1489, Gene687, Gene1077, Gene13 
 Aspect 3: Gene1019, Gene2417, Gene588, Gene2789, Gene2067 
 Aspect 4: Gene81, Gene546, Gene2064, Gene1610, Gene436 
 Aspect 5: Gene1215, Gene2897, Gene2515, Gene508, Gene2733 
 Aspect 6: Gene885, Gene2871, Gene2469, Gene2300, Gene1042 
 Aspect 7: Gene1975, Gene745, Gene765, Gene1399, Gene1067 
 Aspect 8: Gene885, Gene1399, Gene326, Gene1610, Gene1851 
 Aspect 9: Gene57, Gene1475, Gene2007, Gene864, Gene2765 
 Aspect 10: Gene2285, Gene1170, Gene934, Gene107, Gene2635 
.....................................................................................................
Completed E-Step (17 seconds). 
.....................................................................................................
Completed M-Step (210 seconds). 
calculate log likelihood 
convergence.check is 2.294145e-06 
Completing Iteration 56 (approx. per word bound = -21.645, relative change = 2.294e-06) 
.....................................................................................................
Completed E-Step (17 seconds). 
.....................................................................................................
Completed M-Step (210 seconds). 
calculate log likelihood 
convergence.check is 2.266054e-06 
Completing Iteration 57 (approx. per word bound = -21.645, relative change = 2.266e-06) 
.....................................................................................................
Completed E-Step (17 seconds). 
.....................................................................................................
Completed M-Step (209 seconds). 
calculate log likelihood 
convergence.check is 1.91736e-06 
Completing Iteration 58 (approx. per word bound = -21.645, relative change = 1.917e-06) 
.....................................................................................................
Completed E-Step (17 seconds). 
.....................................................................................................
Completed M-Step (210 seconds). 
calculate log likelihood 
convergence.check is 1.766884e-06 
Completing Iteration 59 (approx. per word bound = -21.645, relative change = 1.767e-06) 
.....................................................................................................
Completed E-Step (17 seconds). 
.....................................................................................................
Completed M-Step (210 seconds). 
calculate log likelihood 
convergence.check is 1.708002e-06 
Completing Iteration 60 (approx. per word bound = -21.645, relative change = 1.708e-06) 
Topic 1: Gene333, Gene297, Gene2944, Gene1993, Gene2623 
 Topic 2: Gene2078, Gene2158, Gene2165, Gene1831, Gene249 
 Topic 3: Gene913, Gene2227, Gene156, Gene191, Gene196 
 Topic 4: Gene1905, Gene1321, Gene1135, Gene817, Gene928 
 Topic 5: Gene2567, Gene939, Gene1844, Gene1204, Gene1893 
 Topic 6: Gene2863, Gene1463, Gene1823, Gene2524, Gene1233 
 Topic 7: Gene992, Gene1223, Gene2382, Gene1923, Gene700 
 Topic 8: Gene1798, Gene648, Gene2916, Gene1666, Gene368 
Aspect 1: Gene1709, Gene1077, Gene1296, Gene111, Gene1732 
 Aspect 2: Gene2198, Gene1489, Gene520, Gene687, Gene13 
 Aspect 3: Gene1019, Gene2417, Gene588, Gene546, Gene2789 
 Aspect 4: Gene81, Gene2064, Gene411, Gene436, Gene1610 
 Aspect 5: Gene2657, Gene2776, Gene1215, Gene2897, Gene2515 
 Aspect 6: Gene885, Gene2871, Gene2469, Gene1042, Gene2300 
 Aspect 7: Gene745, Gene1975, Gene765, Gene1067, Gene1399 
 Aspect 8: Gene885, Gene1399, Gene1610, Gene326, Gene2326 
 Aspect 9: Gene57, Gene1475, Gene864, Gene2765, Gene267 
 Aspect 10: Gene2285, Gene1170, Gene934, Gene107, Gene2635 
.....................................................................................................
Completed E-Step (17 seconds). 
.....................................................................................................
Completed M-Step (210 seconds). 
calculate log likelihood 
convergence.check is 1.556008e-06 
Completing Iteration 61 (approx. per word bound = -21.645, relative change = 1.556e-06) 
.....................................................................................................
Completed E-Step (17 seconds). 
.....................................................................................................
Completed M-Step (210 seconds). 
calculate log likelihood 
convergence.check is 1.653027e-06 
Completing Iteration 62 (approx. per word bound = -21.645, relative change = 1.653e-06) 
.....................................................................................................
Completed E-Step (17 seconds). 
.....................................................................................................
Completed M-Step (209 seconds). 
calculate log likelihood 
convergence.check is 1.522904e-06 
Completing Iteration 63 (approx. per word bound = -21.645, relative change = 1.523e-06) 
.....................................................................................................
Completed E-Step (16 seconds). 
.....................................................................................................
Completed M-Step (210 seconds). 
calculate log likelihood 
convergence.check is 1.416983e-06 
Completing Iteration 64 (approx. per word bound = -21.645, relative change = 1.417e-06) 
.....................................................................................................
Completed E-Step (16 seconds). 
.....................................................................................................
Completed M-Step (210 seconds). 
calculate log likelihood 
convergence.check is 1.622477e-06 
Completing Iteration 65 (approx. per word bound = -21.645, relative change = 1.622e-06) 
Topic 1: Gene333, Gene297, Gene2944, Gene1993, Gene2623 
 Topic 2: Gene2078, Gene2158, Gene2165, Gene1831, Gene2445 
 Topic 3: Gene913, Gene2227, Gene156, Gene191, Gene196 
 Topic 4: Gene1905, Gene1321, Gene1135, Gene817, Gene928 
 Topic 5: Gene2567, Gene939, Gene1844, Gene1204, Gene1893 
 Topic 6: Gene2863, Gene1463, Gene1823, Gene2524, Gene1233 
 Topic 7: Gene992, Gene1223, Gene2382, Gene1923, Gene700 
 Topic 8: Gene1798, Gene2916, Gene648, Gene1666, Gene368 
Aspect 1: Gene1709, Gene1077, Gene1296, Gene111, Gene237 
 Aspect 2: Gene2198, Gene1489, Gene13, Gene687, Gene142 
 Aspect 3: Gene1019, Gene546, Gene588, Gene2417, Gene2789 
 Aspect 4: Gene81, Gene1780, Gene2064, Gene411, Gene1610 
 Aspect 5: Gene2776, Gene2657, Gene1215, Gene237, Gene2515 
 Aspect 6: Gene885, Gene2871, Gene2469, Gene2300, Gene1042 
 Aspect 7: Gene745, Gene765, Gene1067, Gene1399, Gene1286 
 Aspect 8: Gene885, Gene1399, Gene1610, Gene326, Gene830 
 Aspect 9: Gene57, Gene1475, Gene864, Gene267, Gene2765 
 Aspect 10: Gene2285, Gene1170, Gene934, Gene107, Gene761 
.....................................................................................................
Completed E-Step (16 seconds). 
.....................................................................................................
Completed M-Step (210 seconds). 
calculate log likelihood 
convergence.check is 1.596741e-06 
Completing Iteration 66 (approx. per word bound = -21.645, relative change = 1.597e-06) 
.....................................................................................................
Completed E-Step (16 seconds). 
.....................................................................................................
Completed M-Step (213 seconds). 
calculate log likelihood 
convergence.check is 1.389105e-06 
Completing Iteration 67 (approx. per word bound = -21.645, relative change = 1.389e-06) 
.....................................................................................................
Completed E-Step (18 seconds). 
.....................................................................................................
Completed M-Step (227 seconds). 
calculate log likelihood 
convergence.check is 1.50052e-06 
Completing Iteration 68 (approx. per word bound = -21.645, relative change = 1.501e-06) 
.....................................................................................................
Completed E-Step (18 seconds). 
.....................................................................................................
Completed M-Step (227 seconds). 
calculate log likelihood 
convergence.check is 1.216111e-06 
Completing Iteration 69 (approx. per word bound = -21.645, relative change = 1.216e-06) 
.....................................................................................................
Completed E-Step (18 seconds). 
.....................................................................................................
Completed M-Step (229 seconds). 
calculate log likelihood 
convergence.check is 1.355157e-06 
Completing Iteration 70 (approx. per word bound = -21.645, relative change = 1.355e-06) 
Topic 1: Gene333, Gene297, Gene1993, Gene2944, Gene2623 
 Topic 2: Gene2078, Gene2158, Gene2165, Gene2445, Gene1831 
 Topic 3: Gene913, Gene2227, Gene156, Gene191, Gene196 
 Topic 4: Gene1905, Gene1321, Gene1135, Gene817, Gene2259 
 Topic 5: Gene2567, Gene939, Gene1844, Gene1204, Gene1893 
 Topic 6: Gene2863, Gene1463, Gene1823, Gene2524, Gene1233 
 Topic 7: Gene992, Gene1923, Gene1223, Gene2382, Gene700 
 Topic 8: Gene1798, Gene2916, Gene648, Gene1666, Gene368 
Aspect 1: Gene1709, Gene1077, Gene1296, Gene111, Gene237 
 Aspect 2: Gene2198, Gene13, Gene1489, Gene142, Gene687 
 Aspect 3: Gene1019, Gene546, Gene588, Gene2417, Gene2789 
 Aspect 4: Gene81, Gene1780, Gene411, Gene2064, Gene1610 
 Aspect 5: Gene2657, Gene2776, Gene237, Gene1940, Gene1215 
 Aspect 6: Gene885, Gene2871, Gene2469, Gene2941, Gene1013 
 Aspect 7: Gene745, Gene765, Gene1067, Gene214, Gene1399 
 Aspect 8: Gene885, Gene1399, Gene1610, Gene326, Gene830 
 Aspect 9: Gene57, Gene1475, Gene864, Gene267, Gene2776 
 Aspect 10: Gene2285, Gene2043, Gene1170, Gene934, Gene107 
.....................................................................................................
Completed E-Step (17 seconds). 
.....................................................................................................
Completed M-Step (227 seconds). 
calculate log likelihood 
convergence.check is 1.073627e-06 
Completing Iteration 71 (approx. per word bound = -21.645, relative change = 1.074e-06) 
.....................................................................................................
Completed E-Step (16 seconds). 
.....................................................................................................
Completed M-Step (207 seconds). 
calculate log likelihood 
convergence.check is 1.00966e-06 
Completing Iteration 72 (approx. per word bound = -21.645, relative change = 1.010e-06) 
.....................................................................................................
Completed E-Step (15 seconds). 
.....................................................................................................
Completed M-Step (208 seconds). 
calculate log likelihood 
convergence.check is 1.209901e-06 
Completing Iteration 73 (approx. per word bound = -21.645, relative change = 1.210e-06) 
.....................................................................................................
Completed E-Step (18 seconds). 
.....................................................................................................
Completed M-Step (212 seconds). 
calculate log likelihood 
convergence.check is 1.249684e-06 
Completing Iteration 74 (approx. per word bound = -21.645, relative change = 1.250e-06) 
.....................................................................................................
Completed E-Step (14 seconds). 
.....................................................................................................
Completed M-Step (210 seconds). 
calculate log likelihood 
convergence.check is 1.279139e-06 
Completing Iteration 75 (approx. per word bound = -21.645, relative change = 1.279e-06) 
Topic 1: Gene333, Gene297, Gene1993, Gene2944, Gene2623 
 Topic 2: Gene2078, Gene2158, Gene2165, Gene1831, Gene2445 
 Topic 3: Gene913, Gene2227, Gene156, Gene191, Gene196 
 Topic 4: Gene1905, Gene1321, Gene1135, Gene817, Gene2259 
 Topic 5: Gene2567, Gene939, Gene1844, Gene1893, Gene1204 
 Topic 6: Gene2863, Gene1463, Gene1823, Gene2524, Gene1233 
 Topic 7: Gene992, Gene1923, Gene1223, Gene2382, Gene700 
 Topic 8: Gene1798, Gene2916, Gene648, Gene2310, Gene1666 
Aspect 1: Gene1709, Gene1077, Gene1296, Gene111, Gene237 
 Aspect 2: Gene2198, Gene1489, Gene13, Gene142, Gene687 
 Aspect 3: Gene1019, Gene546, Gene588, Gene2417, Gene2789 
 Aspect 4: Gene81, Gene1780, Gene411, Gene2064, Gene1610 
 Aspect 5: Gene2657, Gene2776, Gene1940, Gene237, Gene1215 
 Aspect 6: Gene885, Gene2871, Gene2469, Gene2300, Gene2941 
 Aspect 7: Gene745, Gene1475, Gene214, Gene765, Gene1067 
 Aspect 8: Gene885, Gene1610, Gene1399, Gene830, Gene326 
 Aspect 9: Gene57, Gene864, Gene267, Gene2776, Gene830 
 Aspect 10: Gene2285, Gene2043, Gene1170, Gene934, Gene107 
.....................................................................................................
Completed E-Step (14 seconds). 
.....................................................................................................
Completed M-Step (210 seconds). 
calculate log likelihood 
convergence.check is 9.842438e-07 
Model Converged 
5 select model run 
Initialization with topicScore. 
Initializing factors using Topic SCORE algorithm.
Initializing loadings by running 10 SCD updates.
.....................................................................................................
Completed E-Step (47 seconds). 
.....................................................................................................
Completed M-Step (251 seconds). 
calculate log likelihood 
Completing Iteration 1 (approx. per word bound = -21.666) 
.....................................................................................................
Completed E-Step (37 seconds). 
.....................................................................................................
Completed M-Step (257 seconds). 
calculate log likelihood 
convergence.check is 0.0004161374 
Completing Iteration 2 (approx. per word bound = -21.657, relative change = 4.161e-04) 
.....................................................................................................
Completed E-Step (33 seconds). 
.....................................................................................................
Completed M-Step (251 seconds). 
calculate log likelihood 
convergence.check is 0.0001587621 
Completing Iteration 3 (approx. per word bound = -21.654, relative change = 1.588e-04) 
.....................................................................................................
Completed E-Step (30 seconds). 
.....................................................................................................
Completed M-Step (244 seconds). 
calculate log likelihood 
convergence.check is 7.207961e-05 
Completing Iteration 4 (approx. per word bound = -21.652, relative change = 7.208e-05) 
.....................................................................................................
Completed E-Step (28 seconds). 
.....................................................................................................
Completed M-Step (239 seconds). 
calculate log likelihood 
convergence.check is 3.659284e-05 
Completing Iteration 5 (approx. per word bound = -21.651, relative change = 3.659e-05) 
Topic 1: Gene1905, Gene1321, Gene817, Gene2494, Gene2259 
 Topic 2: Gene333, Gene297, Gene1993, Gene2944, Gene287 
 Topic 3: Gene913, Gene2227, Gene191, Gene196, Gene156 
 Topic 4: Gene2863, Gene1463, Gene648, Gene573, Gene1823 
 Topic 5: Gene1463, Gene2863, Gene1823, Gene2941, Gene2524 
 Topic 6: Gene913, Gene2227, Gene156, Gene191, Gene2737 
 Topic 7: Gene1824, Gene1194, Gene1723, Gene2131, Gene1772 
 Topic 8: Gene2567, Gene939, Gene1844, Gene1204, Gene465 
Aspect 1: Gene111, Gene1077, Gene1296, Gene1440, Gene2562 
 Aspect 2: Gene2405, Gene520, Gene410, Gene2543, Gene530 
 Aspect 3: Gene1019, Gene546, Gene2239, Gene2417, Gene588 
 Aspect 4: Gene81, Gene614, Gene546, Gene1450, Gene436 
 Aspect 5: Gene706, Gene1215, Gene1781, Gene2515, Gene2897 
 Aspect 6: Gene2871, Gene885, Gene2469, Gene2300, Gene2941 
 Aspect 7: Gene214, Gene765, Gene1475, Gene745, Gene2900 
 Aspect 8: Gene885, Gene1444, Gene2405, Gene2183, Gene1656 
 Aspect 9: Gene57, Gene1475, Gene988, Gene2007, Gene614 
 Aspect 10: Gene1019, Gene573, Gene934, Gene1170, Gene107 
.....................................................................................................
Completed E-Step (28 seconds). 
.....................................................................................................
Completed M-Step (237 seconds). 
calculate log likelihood 
convergence.check is 2.430875e-05 
Completing Iteration 6 (approx. per word bound = -21.651, relative change = 2.431e-05) 
.....................................................................................................
Completed E-Step (26 seconds). 
.....................................................................................................
Completed M-Step (233 seconds). 
calculate log likelihood 
convergence.check is 2.077069e-05 
Completing Iteration 7 (approx. per word bound = -21.650, relative change = 2.077e-05) 
.....................................................................................................
Completed E-Step (27 seconds). 
.....................................................................................................
Completed M-Step (231 seconds). 
calculate log likelihood 
convergence.check is 1.852425e-05 
Completing Iteration 8 (approx. per word bound = -21.650, relative change = 1.852e-05) 
.....................................................................................................
Completed E-Step (27 seconds). 
.....................................................................................................
Completed M-Step (229 seconds). 
calculate log likelihood 
convergence.check is 1.708769e-05 
Completing Iteration 9 (approx. per word bound = -21.649, relative change = 1.709e-05) 
.....................................................................................................
Completed E-Step (27 seconds). 
.....................................................................................................
Completed M-Step (227 seconds). 
calculate log likelihood 
convergence.check is 1.570277e-05 
Completing Iteration 10 (approx. per word bound = -21.649, relative change = 1.570e-05) 
Topic 1: Gene2494, Gene482, Gene2561, Gene1711, Gene678 
 Topic 2: Gene333, Gene297, Gene287, Gene1993, Gene1375 
 Topic 3: Gene913, Gene2227, Gene191, Gene156, Gene196 
 Topic 4: Gene2863, Gene1463, Gene648, Gene573, Gene1823 
 Topic 5: Gene1463, Gene2863, Gene1823, Gene2524, Gene648 
 Topic 6: Gene1905, Gene928, Gene2073, Gene817, Gene2234 
 Topic 7: Gene1824, Gene1194, Gene1723, Gene2131, Gene1772 
 Topic 8: Gene2567, Gene939, Gene1844, Gene1204, Gene465 
Aspect 1: Gene790, Gene111, Gene1450, Gene1709, Gene1296 
 Aspect 2: Gene2405, Gene1018, Gene520, Gene2543, Gene13 
 Aspect 3: Gene2483, Gene546, Gene1019, Gene2417, Gene1450 
 Aspect 4: Gene614, Gene81, Gene1450, Gene1614, Gene436 
 Aspect 5: Gene706, Gene1215, Gene1781, Gene114, Gene1616 
 Aspect 6: Gene739, Gene2871, Gene885, Gene2469, Gene2300 
 Aspect 7: Gene214, Gene765, Gene745, Gene1475, Gene2900 
 Aspect 8: Gene790, Gene1444, Gene2405, Gene1610, Gene1656 
 Aspect 9: Gene57, Gene614, Gene988, Gene2868, Gene1301 
 Aspect 10: Gene1019, Gene934, Gene573, Gene107, Gene1170 
.....................................................................................................
Completed E-Step (27 seconds). 
.....................................................................................................
Completed M-Step (226 seconds). 
calculate log likelihood 
convergence.check is 1.443909e-05 
Completing Iteration 11 (approx. per word bound = -21.649, relative change = 1.444e-05) 
.....................................................................................................
Completed E-Step (26 seconds). 
.....................................................................................................
Completed M-Step (223 seconds). 
calculate log likelihood 
convergence.check is 1.293476e-05 
Completing Iteration 12 (approx. per word bound = -21.649, relative change = 1.293e-05) 
.....................................................................................................
Completed E-Step (26 seconds). 
.....................................................................................................
Completed M-Step (223 seconds). 
calculate log likelihood 
convergence.check is 1.148397e-05 
Completing Iteration 13 (approx. per word bound = -21.648, relative change = 1.148e-05) 
.....................................................................................................
Completed E-Step (26 seconds). 
.....................................................................................................
Completed M-Step (222 seconds). 
calculate log likelihood 
convergence.check is 1.029478e-05 
Completing Iteration 14 (approx. per word bound = -21.648, relative change = 1.029e-05) 
.....................................................................................................
Completed E-Step (26 seconds). 
.....................................................................................................
Completed M-Step (221 seconds). 
calculate log likelihood 
convergence.check is 8.6389e-06 
Completing Iteration 15 (approx. per word bound = -21.648, relative change = 8.639e-06) 
Topic 1: Gene2494, Gene482, Gene2561, Gene1711, Gene678 
 Topic 2: Gene333, Gene297, Gene287, Gene1993, Gene2623 
 Topic 3: Gene913, Gene2227, Gene191, Gene156, Gene196 
 Topic 4: Gene2863, Gene1463, Gene648, Gene573, Gene2871 
 Topic 5: Gene1463, Gene2863, Gene1823, Gene2524, Gene648 
 Topic 6: Gene1905, Gene2073, Gene1321, Gene817, Gene928 
 Topic 7: Gene1824, Gene1723, Gene2131, Gene1772, Gene1194 
 Topic 8: Gene2567, Gene939, Gene1844, Gene1204, Gene465 
Aspect 1: Gene790, Gene111, Gene1709, Gene1450, Gene1296 
 Aspect 2: Gene57, Gene687, Gene1018, Gene2543, Gene520 
 Aspect 3: Gene2483, Gene1019, Gene2789, Gene2139, Gene1095 
 Aspect 4: Gene614, Gene81, Gene885, Gene1763, Gene1614 
 Aspect 5: Gene706, Gene1215, Gene1781, Gene384, Gene508 
 Aspect 6: Gene2871, Gene2469, Gene885, Gene2300, Gene1042 
 Aspect 7: Gene1475, Gene765, Gene214, Gene745, Gene2900 
 Aspect 8: Gene790, Gene1444, Gene214, Gene745, Gene1610 
 Aspect 9: Gene57, Gene614, Gene2765, Gene2833, Gene1301 
 Aspect 10: Gene107, Gene934, Gene1170, Gene1680, Gene2483 
.....................................................................................................
Completed E-Step (26 seconds). 
.....................................................................................................
Completed M-Step (220 seconds). 
calculate log likelihood 
convergence.check is 7.661771e-06 
Completing Iteration 16 (approx. per word bound = -21.648, relative change = 7.662e-06) 
.....................................................................................................
Completed E-Step (25 seconds). 
.....................................................................................................
Completed M-Step (223 seconds). 
calculate log likelihood 
convergence.check is 6.522371e-06 
Completing Iteration 17 (approx. per word bound = -21.648, relative change = 6.522e-06) 
.....................................................................................................
Completed E-Step (23 seconds). 
.....................................................................................................
Completed M-Step (219 seconds). 
calculate log likelihood 
convergence.check is 5.442879e-06 
Completing Iteration 18 (approx. per word bound = -21.647, relative change = 5.443e-06) 
.....................................................................................................
Completed E-Step (24 seconds). 
.....................................................................................................
Completed M-Step (218 seconds). 
calculate log likelihood 
convergence.check is 4.854113e-06 
Completing Iteration 19 (approx. per word bound = -21.647, relative change = 4.854e-06) 
.....................................................................................................
Completed E-Step (24 seconds). 
.....................................................................................................
Completed M-Step (218 seconds). 
calculate log likelihood 
convergence.check is 4.515901e-06 
Completing Iteration 20 (approx. per word bound = -21.647, relative change = 4.516e-06) 
Topic 1: Gene482, Gene2494, Gene2561, Gene1711, Gene1382 
 Topic 2: Gene333, Gene297, Gene287, Gene2623, Gene2944 
 Topic 3: Gene913, Gene2227, Gene191, Gene156, Gene196 
 Topic 4: Gene1463, Gene2863, Gene2871, Gene648, Gene573 
 Topic 5: Gene2863, Gene1463, Gene2524, Gene1823, Gene648 
 Topic 6: Gene1905, Gene1321, Gene2073, Gene1135, Gene817 
 Topic 7: Gene1824, Gene1723, Gene2131, Gene1772, Gene1617 
 Topic 8: Gene2567, Gene939, Gene1844, Gene465, Gene1204 
Aspect 1: Gene1709, Gene111, Gene237, Gene1312, Gene1296 
 Aspect 2: Gene57, Gene2198, Gene687, Gene2543, Gene520 
 Aspect 3: Gene2483, Gene1019, Gene588, Gene2067, Gene2139 
 Aspect 4: Gene614, Gene81, Gene546, Gene2064, Gene885 
 Aspect 5: Gene1215, Gene1781, Gene2733, Gene384, Gene2515 
 Aspect 6: Gene2469, Gene2871, Gene885, Gene1709, Gene2300 
 Aspect 7: Gene214, Gene765, Gene745, Gene2900, Gene1475 
 Aspect 8: Gene214, Gene790, Gene812, Gene1444, Gene1399 
 Aspect 9: Gene57, Gene614, Gene2765, Gene1301, Gene864 
 Aspect 10: Gene934, Gene107, Gene1170, Gene573, Gene1680 
.....................................................................................................
Completed E-Step (21 seconds). 
.....................................................................................................
Completed M-Step (202 seconds). 
calculate log likelihood 
convergence.check is 3.768374e-06 
Completing Iteration 21 (approx. per word bound = -21.647, relative change = 3.768e-06) 
.....................................................................................................
Completed E-Step (21 seconds). 
.....................................................................................................
Completed M-Step (208 seconds). 
calculate log likelihood 
convergence.check is 3.635588e-06 
Completing Iteration 22 (approx. per word bound = -21.647, relative change = 3.636e-06) 
.....................................................................................................
Completed E-Step (19 seconds). 
.....................................................................................................
Completed M-Step (202 seconds). 
calculate log likelihood 
convergence.check is 3.268428e-06 
Completing Iteration 23 (approx. per word bound = -21.647, relative change = 3.268e-06) 
.....................................................................................................
Completed E-Step (19 seconds). 
.....................................................................................................
Completed M-Step (201 seconds). 
calculate log likelihood 
convergence.check is 2.645499e-06 
Completing Iteration 24 (approx. per word bound = -21.647, relative change = 2.645e-06) 
.....................................................................................................
Completed E-Step (19 seconds). 
.....................................................................................................
Completed M-Step (207 seconds). 
calculate log likelihood 
convergence.check is 2.485643e-06 
Completing Iteration 25 (approx. per word bound = -21.647, relative change = 2.486e-06) 
Topic 1: Gene482, Gene2561, Gene2494, Gene1382, Gene1711 
 Topic 2: Gene333, Gene297, Gene287, Gene2623, Gene2944 
 Topic 3: Gene913, Gene2227, Gene191, Gene196, Gene156 
 Topic 4: Gene1463, Gene2871, Gene2863, Gene648, Gene573 
 Topic 5: Gene2863, Gene2524, Gene1463, Gene1823, Gene648 
 Topic 6: Gene1905, Gene1321, Gene2073, Gene1135, Gene817 
 Topic 7: Gene1824, Gene2131, Gene1723, Gene1772, Gene2849 
 Topic 8: Gene2567, Gene939, Gene1844, Gene465, Gene1204 
Aspect 1: Gene111, Gene237, Gene1312, Gene1401, Gene1350 
 Aspect 2: Gene57, Gene2198, Gene687, Gene520, Gene2543 
 Aspect 3: Gene1019, Gene2483, Gene2417, Gene588, Gene2026 
 Aspect 4: Gene81, Gene546, Gene2064, Gene436, Gene1610 
 Aspect 5: Gene1215, Gene1781, Gene706, Gene2733, Gene384 
 Aspect 6: Gene2469, Gene2871, Gene885, Gene1709, Gene2300 
 Aspect 7: Gene214, Gene765, Gene1475, Gene745, Gene2198 
 Aspect 8: Gene214, Gene790, Gene812, Gene1444, Gene1399 
 Aspect 9: Gene57, Gene2765, Gene614, Gene1301, Gene2269 
 Aspect 10: Gene934, Gene107, Gene761, Gene1170, Gene1680 
.....................................................................................................
Completed E-Step (21 seconds). 
.....................................................................................................
Completed M-Step (218 seconds). 
calculate log likelihood 
convergence.check is 1.90552e-06 
Completing Iteration 26 (approx. per word bound = -21.647, relative change = 1.906e-06) 
.....................................................................................................
Completed E-Step (21 seconds). 
.....................................................................................................
Completed M-Step (218 seconds). 
calculate log likelihood 
convergence.check is 2.460769e-06 
Completing Iteration 27 (approx. per word bound = -21.647, relative change = 2.461e-06) 
.....................................................................................................
Completed E-Step (21 seconds). 
.....................................................................................................
Completed M-Step (219 seconds). 
calculate log likelihood 
convergence.check is 1.858316e-06 
Completing Iteration 28 (approx. per word bound = -21.647, relative change = 1.858e-06) 
.....................................................................................................
Completed E-Step (21 seconds). 
.....................................................................................................
Completed M-Step (219 seconds). 
calculate log likelihood 
convergence.check is 1.657678e-06 
Completing Iteration 29 (approx. per word bound = -21.647, relative change = 1.658e-06) 
.....................................................................................................
Completed E-Step (21 seconds). 
.....................................................................................................
Completed M-Step (219 seconds). 
calculate log likelihood 
convergence.check is 1.865635e-06 
Completing Iteration 30 (approx. per word bound = -21.647, relative change = 1.866e-06) 
Topic 1: Gene482, Gene2561, Gene2494, Gene1382, Gene1711 
 Topic 2: Gene333, Gene297, Gene287, Gene2623, Gene2944 
 Topic 3: Gene913, Gene2227, Gene191, Gene156, Gene196 
 Topic 4: Gene2871, Gene1463, Gene2863, Gene648, Gene814 
 Topic 5: Gene2524, Gene2863, Gene1463, Gene1823, Gene648 
 Topic 6: Gene1905, Gene1321, Gene2073, Gene1135, Gene817 
 Topic 7: Gene1824, Gene2131, Gene1723, Gene1772, Gene2849 
 Topic 8: Gene2567, Gene939, Gene1844, Gene465, Gene1204 
Aspect 1: Gene237, Gene111, Gene1312, Gene1401, Gene1350 
 Aspect 2: Gene57, Gene2198, Gene687, Gene520, Gene13 
 Aspect 3: Gene2483, Gene2417, Gene588, Gene2139, Gene2789 
 Aspect 4: Gene81, Gene546, Gene2064, Gene436, Gene1610 
 Aspect 5: Gene1215, Gene706, Gene2733, Gene1781, Gene2515 
 Aspect 6: Gene2469, Gene2871, Gene885, Gene1042, Gene2941 
 Aspect 7: Gene214, Gene765, Gene2198, Gene745, Gene1975 
 Aspect 8: Gene214, Gene790, Gene885, Gene1444, Gene1399 
 Aspect 9: Gene57, Gene2765, Gene2007, Gene1301, Gene1475 
 Aspect 10: Gene934, Gene573, Gene107, Gene1170, Gene761 
.....................................................................................................
Completed E-Step (21 seconds). 
.....................................................................................................
Completed M-Step (219 seconds). 
calculate log likelihood 
convergence.check is 1.345144e-06 
Completing Iteration 31 (approx. per word bound = -21.647, relative change = 1.345e-06) 
.....................................................................................................
Completed E-Step (20 seconds). 
.....................................................................................................
Completed M-Step (219 seconds). 
calculate log likelihood 
convergence.check is 1.621204e-06 
Completing Iteration 32 (approx. per word bound = -21.647, relative change = 1.621e-06) 
.....................................................................................................
Completed E-Step (20 seconds). 
.....................................................................................................
Completed M-Step (220 seconds). 
calculate log likelihood 
convergence.check is 1.262299e-06 
Completing Iteration 33 (approx. per word bound = -21.647, relative change = 1.262e-06) 
.....................................................................................................
Completed E-Step (20 seconds). 
.....................................................................................................
Completed M-Step (220 seconds). 
calculate log likelihood 
convergence.check is 1.166943e-06 
Completing Iteration 34 (approx. per word bound = -21.647, relative change = 1.167e-06) 
.....................................................................................................
Completed E-Step (21 seconds). 
.....................................................................................................
Completed M-Step (220 seconds). 
calculate log likelihood 
convergence.check is 1.650148e-06 
Completing Iteration 35 (approx. per word bound = -21.647, relative change = 1.650e-06) 
Topic 1: Gene482, Gene2561, Gene2494, Gene1382, Gene1711 
 Topic 2: Gene333, Gene297, Gene287, Gene2623, Gene2944 
 Topic 3: Gene913, Gene2227, Gene156, Gene191, Gene196 
 Topic 4: Gene1463, Gene2871, Gene2863, Gene648, Gene814 
 Topic 5: Gene2524, Gene2863, Gene1823, Gene1463, Gene648 
 Topic 6: Gene1905, Gene1321, Gene2073, Gene1135, Gene817 
 Topic 7: Gene1824, Gene2131, Gene1723, Gene1772, Gene2849 
 Topic 8: Gene2567, Gene939, Gene1844, Gene465, Gene1204 
Aspect 1: Gene237, Gene1312, Gene111, Gene1401, Gene1296 
 Aspect 2: Gene57, Gene2198, Gene687, Gene520, Gene13 
 Aspect 3: Gene2483, Gene2417, Gene588, Gene2789, Gene2139 
 Aspect 4: Gene81, Gene546, Gene2064, Gene436, Gene1610 
 Aspect 5: Gene1215, Gene2733, Gene706, Gene2897, Gene2515 
 Aspect 6: Gene885, Gene2469, Gene2871, Gene2300, Gene1042 
 Aspect 7: Gene765, Gene1975, Gene745, Gene214, Gene2198 
 Aspect 8: Gene214, Gene885, Gene790, Gene1444, Gene326 
 Aspect 9: Gene57, Gene2765, Gene2007, Gene2269, Gene864 
 Aspect 10: Gene934, Gene107, Gene573, Gene1170, Gene761 
.....................................................................................................
Completed E-Step (20 seconds). 
.....................................................................................................
Completed M-Step (221 seconds). 
calculate log likelihood 
convergence.check is 1.436347e-06 
Completing Iteration 36 (approx. per word bound = -21.646, relative change = 1.436e-06) 
.....................................................................................................
Completed E-Step (20 seconds). 
.....................................................................................................
Completed M-Step (221 seconds). 
calculate log likelihood 
convergence.check is 1.504102e-06 
Completing Iteration 37 (approx. per word bound = -21.646, relative change = 1.504e-06) 
.....................................................................................................
Completed E-Step (19 seconds). 
.....................................................................................................
Completed M-Step (222 seconds). 
calculate log likelihood 
convergence.check is 1.163708e-06 
Completing Iteration 38 (approx. per word bound = -21.646, relative change = 1.164e-06) 
.....................................................................................................
Completed E-Step (18 seconds). 
.....................................................................................................
Completed M-Step (222 seconds). 
calculate log likelihood 
convergence.check is 1.425597e-06 
Completing Iteration 39 (approx. per word bound = -21.646, relative change = 1.426e-06) 
.....................................................................................................
Completed E-Step (18 seconds). 
.....................................................................................................
Completed M-Step (222 seconds). 
calculate log likelihood 
convergence.check is 9.733141e-07 
Model Converged 
