
R version 4.3.1 (2023-06-16) -- "Beagle Scouts"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> setwd("/proj/milovelab/wu/scLDAseq")
> library(compositions)
Welcome to compositions, a package for compositional data analysis.
Find an intro with "? compositions"


Attaching package: ‘compositions’

The following objects are masked from ‘package:stats’:

    anova, cor, cov, dist, var

The following object is masked from ‘package:graphics’:

    segments

The following objects are masked from ‘package:base’:

    %*%, norm, scale, scale.default

> library(Matrix)
> library(dplyr)

Attaching package: ‘dplyr’

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(tidyverse)
── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──
✔ forcats   1.0.0     ✔ readr     2.1.4
✔ ggplot2   3.4.4     ✔ stringr   1.5.1
✔ lubridate 1.9.3     ✔ tibble    3.2.1
✔ purrr     1.0.2     ✔ tidyr     1.3.0
── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──
✖ tidyr::expand() masks Matrix::expand()
✖ dplyr::filter() masks stats::filter()
✖ dplyr::lag()    masks stats::lag()
✖ tidyr::pack()   masks Matrix::pack()
✖ tidyr::unpack() masks Matrix::unpack()
ℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors
> library(Rcpp)
> library(SingleCellExperiment)
Loading required package: SummarizedExperiment
Loading required package: MatrixGenerics
Loading required package: matrixStats

Attaching package: ‘matrixStats’

The following object is masked from ‘package:dplyr’:

    count


Attaching package: ‘MatrixGenerics’

The following objects are masked from ‘package:matrixStats’:

    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,
    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,
    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,
    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,
    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,
    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,
    colWeightedMeans, colWeightedMedians, colWeightedSds,
    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,
    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,
    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,
    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,
    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,
    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,
    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,
    rowWeightedSds, rowWeightedVars

Loading required package: GenomicRanges
Loading required package: stats4
Loading required package: BiocGenerics

Attaching package: ‘BiocGenerics’

The following objects are masked from ‘package:lubridate’:

    intersect, setdiff, union

The following objects are masked from ‘package:dplyr’:

    combine, intersect, setdiff, union

The following objects are masked from ‘package:compositions’:

    normalize, var

The following objects are masked from ‘package:stats’:

    IQR, mad, sd, var, xtabs

The following objects are masked from ‘package:base’:

    anyDuplicated, aperm, append, as.data.frame, basename, cbind,
    colnames, dirname, do.call, duplicated, eval, evalq, Filter, Find,
    get, grep, grepl, intersect, is.unsorted, lapply, Map, mapply,
    match, mget, order, paste, pmax, pmax.int, pmin, pmin.int,
    Position, rank, rbind, Reduce, rownames, sapply, setdiff, sort,
    table, tapply, union, unique, unsplit, which.max, which.min

Loading required package: S4Vectors

Attaching package: ‘S4Vectors’

The following objects are masked from ‘package:lubridate’:

    second, second<-

The following object is masked from ‘package:tidyr’:

    expand

The following objects are masked from ‘package:dplyr’:

    first, rename

The following objects are masked from ‘package:Matrix’:

    expand, unname

The following object is masked from ‘package:utils’:

    findMatches

The following objects are masked from ‘package:base’:

    expand.grid, I, unname

Loading required package: IRanges

Attaching package: ‘IRanges’

The following object is masked from ‘package:lubridate’:

    %within%

The following object is masked from ‘package:purrr’:

    reduce

The following objects are masked from ‘package:dplyr’:

    collapse, desc, slice

Loading required package: GenomeInfoDb
Loading required package: Biobase
Welcome to Bioconductor

    Vignettes contain introductory material; view with
    'browseVignettes()'. To cite Bioconductor, see
    'citation("Biobase")', and for packages 'citation("pkgname")'.


Attaching package: ‘Biobase’

The following object is masked from ‘package:MatrixGenerics’:

    rowMedians

The following objects are masked from ‘package:matrixStats’:

    anyMissing, rowMedians

> library(CompDTUReg)
Loading required package: data.table

Attaching package: ‘data.table’

The following object is masked from ‘package:SummarizedExperiment’:

    shift

The following object is masked from ‘package:GenomicRanges’:

    shift

The following object is masked from ‘package:IRanges’:

    shift

The following objects are masked from ‘package:S4Vectors’:

    first, second

The following objects are masked from ‘package:lubridate’:

    hour, isoweek, mday, minute, month, quarter, second, wday, week,
    yday, year

The following object is masked from ‘package:purrr’:

    transpose

The following objects are masked from ‘package:dplyr’:

    between, first, last

> library(stats)
> 
> control <- c("neg_L1", paste0("pos_L", 1:4))
> nCellType <- paste0("c",c(3,5,9))
> level <- expand.grid(control, nCellType) %>% mutate(level = paste0(Var1,"_",Var2)) %>% select(level)
> level <- level$level
> 
> all.Y <- vector(mode = "list")
> for (l in level){
+   files <- list.files(path = "/work/users/e/u/euphyw/scLDAseq/data/simulation/composition_change/V4/scSTM_combat_f_nc/", pattern = l)
+   res <- data.frame()
+   for (file_name in files){
+     scSTMobj <- readRDS(paste0("/work/users/e/u/euphyw/scLDAseq/data/simulation/composition_change/V4/scSTM_combat_f_nc/", file_name))
+     theta <- scSTMobj$theta
+     rownames(theta) <- scSTMobj$DocName
+     time <- scSTMobj$settings$covariates$X[,2]
+     names(time) <- scSTMobj$DocName
+     t1 <- theta[match(names(time)[time==1], rownames(theta)),]
+     t2 <- theta[match(names(time)[time==2], rownames(theta)),]
+     Y <- rbind(colMeans(t1),colMeans(t2))
+     cat(file_name, "\n")
+     res <- rbind(res, Y)
+   }
+   all.Y[[l]] <- res
+ }
scSTM_1715448331_neg_L1_c3.rds 
scSTM_1715448335_neg_L1_c3.rds 
scSTM_1715448336_neg_L1_c3.rds 
scSTM_1715448342_neg_L1_c3.rds 
scSTM_1715448345_neg_L1_c3.rds 
scSTM_1715448352_neg_L1_c3.rds 
scSTM_1715448365_neg_L1_c3.rds 
scSTM_1715448385_neg_L1_c3.rds 
scSTM_1715448388_neg_L1_c3.rds 
scSTM_1715448400_neg_L1_c3.rds 
scSTM_1715448331_pos_L1_c3.rds 
scSTM_1715448335_pos_L1_c3.rds 
scSTM_1715448336_pos_L1_c3.rds 
scSTM_1715448342_pos_L1_c3.rds 
scSTM_1715448345_pos_L1_c3.rds 
scSTM_1715448352_pos_L1_c3.rds 
scSTM_1715448365_pos_L1_c3.rds 
scSTM_1715448385_pos_L1_c3.rds 
scSTM_1715448388_pos_L1_c3.rds 
scSTM_1715448400_pos_L1_c3.rds 
scSTM_1715448331_pos_L2_c3.rds 
scSTM_1715448335_pos_L2_c3.rds 
scSTM_1715448336_pos_L2_c3.rds 
scSTM_1715448342_pos_L2_c3.rds 
scSTM_1715448345_pos_L2_c3.rds 
scSTM_1715448352_pos_L2_c3.rds 
scSTM_1715448365_pos_L2_c3.rds 
scSTM_1715448385_pos_L2_c3.rds 
scSTM_1715448388_pos_L2_c3.rds 
scSTM_1715448400_pos_L2_c3.rds 
scSTM_1715448331_pos_L3_c3.rds 
scSTM_1715448335_pos_L3_c3.rds 
scSTM_1715448336_pos_L3_c3.rds 
scSTM_1715448342_pos_L3_c3.rds 
scSTM_1715448345_pos_L3_c3.rds 
scSTM_1715448352_pos_L3_c3.rds 
scSTM_1715448365_pos_L3_c3.rds 
scSTM_1715448385_pos_L3_c3.rds 
scSTM_1715448388_pos_L3_c3.rds 
scSTM_1715448400_pos_L3_c3.rds 
scSTM_1715448331_pos_L4_c3.rds 
scSTM_1715448335_pos_L4_c3.rds 
scSTM_1715448336_pos_L4_c3.rds 
scSTM_1715448342_pos_L4_c3.rds 
scSTM_1715448345_pos_L4_c3.rds 
scSTM_1715448352_pos_L4_c3.rds 
scSTM_1715448365_pos_L4_c3.rds 
scSTM_1715448385_pos_L4_c3.rds 
scSTM_1715448388_pos_L4_c3.rds 
scSTM_1715448400_pos_L4_c3.rds 
scSTM_1715448331_neg_L1_c5.rds 
scSTM_1715448335_neg_L1_c5.rds 
scSTM_1715448336_neg_L1_c5.rds 
scSTM_1715448342_neg_L1_c5.rds 
scSTM_1715448345_neg_L1_c5.rds 
scSTM_1715448352_neg_L1_c5.rds 
scSTM_1715448365_neg_L1_c5.rds 
scSTM_1715448385_neg_L1_c5.rds 
scSTM_1715448388_neg_L1_c5.rds 
scSTM_1715448331_pos_L1_c5.rds 
scSTM_1715448335_pos_L1_c5.rds 
scSTM_1715448336_pos_L1_c5.rds 
scSTM_1715448342_pos_L1_c5.rds 
scSTM_1715448345_pos_L1_c5.rds 
scSTM_1715448352_pos_L1_c5.rds 
scSTM_1715448365_pos_L1_c5.rds 
scSTM_1715448385_pos_L1_c5.rds 
scSTM_1715448388_pos_L1_c5.rds 
scSTM_1715448400_pos_L1_c5.rds 
scSTM_1715448331_pos_L2_c5.rds 
scSTM_1715448335_pos_L2_c5.rds 
scSTM_1715448336_pos_L2_c5.rds 
scSTM_1715448342_pos_L2_c5.rds 
scSTM_1715448345_pos_L2_c5.rds 
scSTM_1715448352_pos_L2_c5.rds 
scSTM_1715448365_pos_L2_c5.rds 
scSTM_1715448385_pos_L2_c5.rds 
scSTM_1715448388_pos_L2_c5.rds 
scSTM_1715448400_pos_L2_c5.rds 
scSTM_1715448331_pos_L3_c5.rds 
scSTM_1715448335_pos_L3_c5.rds 
scSTM_1715448336_pos_L3_c5.rds 
scSTM_1715448342_pos_L3_c5.rds 
scSTM_1715448345_pos_L3_c5.rds 
scSTM_1715448352_pos_L3_c5.rds 
scSTM_1715448365_pos_L3_c5.rds 
scSTM_1715448385_pos_L3_c5.rds 
scSTM_1715448388_pos_L3_c5.rds 
scSTM_1715448400_pos_L3_c5.rds 
scSTM_1715448331_pos_L4_c5.rds 
scSTM_1715448335_pos_L4_c5.rds 
scSTM_1715448336_pos_L4_c5.rds 
scSTM_1715448342_pos_L4_c5.rds 
scSTM_1715448345_pos_L4_c5.rds 
scSTM_1715448352_pos_L4_c5.rds 
scSTM_1715448365_pos_L4_c5.rds 
scSTM_1715448385_pos_L4_c5.rds 
scSTM_1715448388_pos_L4_c5.rds 
scSTM_1715448331_neg_L1_c9.rds 
scSTM_1715448335_neg_L1_c9.rds 
scSTM_1715448336_neg_L1_c9.rds 
scSTM_1715448342_neg_L1_c9.rds 
scSTM_1715448345_neg_L1_c9.rds 
scSTM_1715448352_neg_L1_c9.rds 
scSTM_1715448365_neg_L1_c9.rds 
scSTM_1715448385_neg_L1_c9.rds 
scSTM_1715448388_neg_L1_c9.rds 
scSTM_1715448331_pos_L2_c9.rds 
scSTM_1715448335_pos_L2_c9.rds 
scSTM_1715448336_pos_L2_c9.rds 
scSTM_1715448342_pos_L2_c9.rds 
scSTM_1715448345_pos_L2_c9.rds 
scSTM_1715448352_pos_L2_c9.rds 
scSTM_1715448365_pos_L2_c9.rds 
scSTM_1715448385_pos_L2_c9.rds 
scSTM_1715448388_pos_L2_c9.rds 
scSTM_1715448400_pos_L2_c9.rds 
scSTM_1715448331_pos_L3_c9.rds 
scSTM_1715448335_pos_L3_c9.rds 
scSTM_1715448336_pos_L3_c9.rds 
scSTM_1715448342_pos_L3_c9.rds 
scSTM_1715448345_pos_L3_c9.rds 
scSTM_1715448352_pos_L3_c9.rds 
scSTM_1715448388_pos_L3_c9.rds 
scSTM_1715448331_pos_L4_c9.rds 
scSTM_1715448335_pos_L4_c9.rds 
scSTM_1715448336_pos_L4_c9.rds 
scSTM_1715448342_pos_L4_c9.rds 
scSTM_1715448345_pos_L4_c9.rds 
scSTM_1715448365_pos_L4_c9.rds 
scSTM_1715448388_pos_L4_c9.rds 
> saveRDS(all.Y, file = "allY_V4_scSTM.rds")
> 
> 
> # power_error_plot <- function(dat, threshold = 0.05,
> #                              title1, title2){
> #   dat <- dat %>%
> #     mutate(padj = p.adjust(pval_CompDTU, method = "fdr")) %>% # not using adjusted pvalue
> #     mutate(sig_change = ifelse(padj < 0.05, 1, 0))
> #   
> #   power <- dat %>%
> #     filter(truth == 1) %>%  # Subset where the null hypothesis is false
> #     group_by(nCellType) %>%
> #     summarise(
> #       total_cases = n(),  # Total cases where truth = 1
> #       successful_rejections = sum(sig_change == 1),  # Cases where the null was correctly rejected
> #       power = successful_rejections / total_cases  # Proportion of successful rejections
> #     ) 
> #   
> #   typeI <- dat %>%
> #     filter(truth == 0) %>%  # Subset where the null hypothesis is false
> #     group_by(nCellType) %>%
> #     summarise(
> #       total_cases = n(),  # Total cases where truth = 1
> #       false_rejections = sum(sig_change == 1),  # Cases where the null was correctly rejected
> #       alpha = false_rejections / total_cases  # Proportion of successful rejections
> #     ) 
> #   
> #   par(mfrow = c(1, 2))
> #   p <- ggplot(power, aes(x = nCellType, y = power, group = 1)) +
> #     geom_line(color = "blue") +  # Connect points with lines
> #     geom_point(size = 3, color = "red") +  # Highlight each point
> #     labs(title = title1,
> #          x = "nCellType",
> #          y = "Power") +
> #     theme_minimal()
> #   
> #   t1 <- ggplot(typeI, aes(x = nCellType, y = alpha, group = 1)) +
> #     geom_line(color = "blue") +  # Connect points with lines
> #     geom_point(size = 3, color = "red") +  # Highlight each point
> #     labs(title = title2,
> #          x = "nCellType",
> #          y = "Type I Error") +
> #     theme_minimal()
> #   
> #   return(grid.arrange(p, t1))
> # }
> # all.Y <- readRDS("allY_V4_scSTM.rds")
> # ##### CompDTU ########
> # compDTU <- function(Y){
> #   # Y <- Y[,2:ncol(Y)]
> #   Y <- compositions::ilr(Y)
> #   Group <- rep(c(1,2), times = nrow(Y)/2)
> #   Group <- factor(Group)
> #   res <- data.frame()
> #   temp <- CompDTUReg(genename = "sample", Y = Y, Group = Group, runWithME = FALSE, YInfRep = NULL)
> #   res <- rbind(res, temp)
> #   return(res)
> # }
> # 
> # res <- lapply(all.Y, FUN = compDTU)
> # res <- Map(function(df, name) {
> #   df$truth <- str_split(name, "_", simplify = TRUE)[1]
> #   df$nCellType <- str_split(name, "_", simplify = TRUE)[2]
> #   df
> # }, res, names(res))
> # res <- do.call(rbind, res) %>%
> #   as.data.frame() %>%
> #   mutate(truth = ifelse(truth == "neg", 0, 1))
> # 
> # power_error_plot(res, title1 = "Power Plot for CompDTU", title2 = "Type I error plot for CompDTU")
> 
> 
> proc.time()
    user   system  elapsed 
3365.329  550.047 4067.530 
